<AV:CommonDataUserControl 
	x:Class="ContentTypeTextNet.Pe.PeMain.View.Parts.Control.SettingPage.ToolbarSettingControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:windows="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:AM="clr-namespace:ContentTypeTextNet.Pe.PeMain"
	xmlns:AV="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Control"
	xmlns:AA="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Attached"
	xmlns:AP="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts"
	xmlns:AC="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Converter"
	xmlns:ACE="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Converter.EnumLanguageConverter"
	xmlns:SC="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=SharedLibrary"
	
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	mc:Ignorable="d" 
	d:DesignHeight="318" d:DesignWidth="517"
>
	<AV:CommonDataUserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/View/Parts/Resource/ImageDictionary.xaml"/>
				<ResourceDictionary Source="/View/Parts/Resource/ToolbarDictionary.xaml"/>
				<ResourceDictionary Source="/View/Parts/Resource/GridSplitterDictionary.xaml"/>
				<ResourceDictionary Source="/View/Parts/Resource/GroupBoxDictionary.xaml"/>
				<ResourceDictionary Source="/View/Parts/Resource/LabelDictionary.xaml"/>
				<ResourceDictionary Source="/View/Parts/Resource/ComboBoxDictionary.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<SC:LogicalIsNotNullConverter x:Key="LogicalIsNotNullConverter" />
			<AC:DisplayTextConverter x:Key="DisplayTextConverter" />
			<AC:SelectedNodeAndLauncherItemConverter x:Key="SelectedNodeAndLauncherItemConverter" />
			<AC:TreeListLauncherItemRelationConverter x:Key="TreeListLauncherItemRelationConverter" />
			<AC:ToolbarDockTypeImageConverter x:Key="ToolbarDockTypeImageConverter" />
			<ACE:DockTypeLanguageConverter  x:Key="DockTypeLanguageConverter" />
			<ACE:IconScaleLanguageConverter x:Key="IconScaleLanguageConverter" />
		</ResourceDictionary>
	</AV:CommonDataUserControl.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="270"/>
			<ColumnDefinition Width="180*"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="140*"/>
		</Grid.ColumnDefinitions>
		<GroupBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource DefaultGroupBox}">
			<GroupBox.Header>
				<Grid HorizontalAlignment="Stretch">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="180"/>
						<ColumnDefinition MinWidth="60" />
					</Grid.ColumnDefinitions>
					<ComboBox Grid.Column="0" SelectedIndex="0" DisplayMemberPath="DisplayText" SelectedItem="{Binding SelectedToolbar}" ItemsSource="{Binding ToolbarItemList, Mode=OneTime}" />
					<Button Grid.Column="1" Content="screen" AA:Language.Word="toolbar-setting/screen" Command="{Binding ShowScreenCommand}" />
				</Grid>
			</GroupBox.Header>
			<Grid>
				<Grid.Resources>
					<Style TargetType="ComboBox" BasedOn="{StaticResource DefaultComboBox}" />
				</Grid.Resources>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Label Grid.Row="0" Grid.Column="0" Content="group" AA:Language.Word="toolbar-setting/toolbar/group" Style="{StaticResource HeaderLabel}" />
				<ComboBox Grid.Column="1" ItemsSource="{Binding DefaultGroupList}" SelectedValue="{Binding SelectedToolbar.DefaultGroupId}" SelectedIndex="{Binding DefaultGroupIndex}" SelectedValuePath="Id" >
					<ComboBox.ItemTemplate>
						<ItemContainerTemplate>
							<ContentPresenter Content="{Binding Converter={StaticResource DisplayTextConverter}}" />
						</ItemContainerTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>

				<Label Grid.Row="1" Grid.Column="0" Content="dock" AA:Language.Word="toolbar-setting/toolbar/position" Style="{StaticResource HeaderLabel}" />
				<ComboBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Source={x:Static AP:EnumList.DockTypeList}}" SelectedItem="{Binding SelectedToolbar.DockType, Mode=TwoWay}">
					<ComboBox.Resources>
						<windows:Size x:Key="ImageSize" Width="16" Height="16" />
					</ComboBox.Resources>
					<ComboBox.ItemTemplate>
						<DataTemplate>
							<StackPanel Orientation="Horizontal">
								<Label SnapsToDevicePixels="True" Content="{Binding Converter={StaticResource ToolbarDockTypeImageConverter}, ConverterParameter={StaticResource ImageSize}}" />
								<TextBlock VerticalAlignment="Center">
									<TextBlock.Text>
										<MultiBinding Converter="{StaticResource DockTypeLanguageConverter}" >
											<Binding Path="" /><!-- *{Binding}* -->
											<Binding Path="CommonData.Language" RelativeSource="{RelativeSource AncestorType=AV:CommonDataUserControl}" />
										</MultiBinding>
									</TextBlock.Text>
								</TextBlock>
							</StackPanel>
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>

				<Label Grid.Row="2" Grid.Column="0" Content="icon" AA:Language.Word="toolbar-setting/toolbar/icon" Style="{StaticResource HeaderLabel}" />
				<ComboBox Grid.Column="1" Grid.Row="2" ItemsSource="{Binding Source={x:Static AP:EnumList.PlainIconScaleList}}" SelectedItem="{Binding SelectedToolbar.IconScale, Mode=TwoWay}" >
					<ComboBox.ItemTemplate>
						<DataTemplate>
							<TextBlock>
								<TextBlock.Text>
									<MultiBinding Converter="{StaticResource IconScaleLanguageConverter}" >
										<Binding Path="" />
										<Binding Path="CommonData.Language" RelativeSource="{RelativeSource AncestorType=AV:CommonDataUserControl}" />
									</MultiBinding>
								</TextBlock.Text>
							</TextBlock>
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>

				<Label Grid.Row="3" Grid.Column="0" VerticalAlignment="Top" Content="font" AA:Language.Word="toolbar-setting/toolbar/font" Style="{StaticResource HeaderLabel}" />
				<AV:FontSelectControl
					Grid.Row="3" Grid.Column="1"
					FamilyName="{Binding SelectedToolbar.FontFamily}"
					IsBold="{Binding SelectedToolbar.FontBold}"
					IsItalic="{Binding SelectedToolbar.FontItalic}"
					Size="{Binding SelectedToolbar.FontSize}"
					SizeMinimum="{x:Static AM:Constants.ToolbarFontMinimumSize}"
					SizeMaximum="{x:Static AM:Constants.ToolbarFontMaximumSize}"
				/>

				<Label Grid.Row="4" Grid.Column="0" Content="text length" AA:Language.Word="toolbar-setting/toolbar/text-length" Style="{StaticResource HeaderLabel}" />
				<AV:DoubleSliderControl
					Grid.Row="4"
					Grid.Column="1"
					Value="{Binding SelectedToolbar.TextWidth, Mode=TwoWay}"
					Minimum="{Binding Source={x:Static AM:Constants.ToolbarTextMinimumLength}}"
					Maximum="{Binding Source={x:Static AM:Constants.ToolbarTextMaximumLength}}"
				/>

				<Label Grid.Row="5" Grid.Column="0" Content="hide wait" AA:Language.Word="toolbar-setting/toolbar/auto-hide-time" Style="{StaticResource HeaderLabel}" />
				<AV:TimeSliderControl
					Grid.Row="5"
					Grid.Column="1"
					Value="{Binding SelectedToolbar.HideWaitTime, Mode=TwoWay}"
					Minimum="{Binding Source={x:Static AM:Constants.ToolbarHideWaitMinimumTime}}"
					Maximum="{Binding Source={x:Static AM:Constants.ToolbarHideWaitMaximumTime}}"
				/>

				<StackPanel Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Top">
					<CheckBox Content="show text" AA:Language.Word="toolbar-setting/toolbar/show-text"  IsChecked="{Binding SelectedToolbar.TextVisible}" />
					<CheckBox Content="auto hide" AA:Language.Word="toolbar-setting/toolbar/auto-hide" IsChecked="{Binding SelectedToolbar.AutoHide}" />
					<CheckBox Content="topmost" AA:Language.Word="toolbar-setting/toolbar/topmost" IsChecked="{Binding SelectedToolbar.IsTopmost}" />
					<CheckBox Content="visible" AA:Language.Word="toolbar-setting/toolbar/visible" IsChecked="{Binding SelectedToolbar.IsVisible}" />
					<CheckBox Content="menu position" AA:Language.Word="toolbar-setting/toolbar/menu-posotion" IsChecked="{Binding SelectedToolbar.MenuPositionCorrection}" />
				</StackPanel>
			</Grid>
		</GroupBox>
		<Grid Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>
			<!--<ToolBarTray HorizontalAlignment="Stretch" VerticalAlignment="Stretch">-->
			<ToolBar Style="{StaticResource DefaultToolbar}">
				<!--<StackPanel Orientation="Horizontal">-->
				<Button AA:Language.Hint="toolbar-setting/group/node/add/group" Command="{Binding CreateGroupCommand}">
					<Image Source="{x:Static AM:AppResource.SettingLauncherGroupParentImage}" Style="{StaticResource DefaultImage}" />
				</Button>
				<Button 
					AA:Language.Hint="toolbar-setting/group/node/add/item"
					IsEnabled="{Binding SelectedLauncherItem, ElementName=listItems, Converter={StaticResource LogicalIsNotNullConverter}}" 
					Command="{Binding CreateLauncherItemCommand}" 
				>
					<Button.CommandParameter>
						<MultiBinding Converter="{StaticResource SelectedNodeAndLauncherItemConverter}">
							<Binding Path="SelectedItem" ElementName="treeGroup" />
							<Binding Path="SelectedLauncherItem" ElementName="listItems" />
						</MultiBinding>
					</Button.CommandParameter>
					<Image Source="{x:Static AM:AppResource.SettingLauncherGroupItemImage}" Style="{StaticResource DefaultImage}" />
				</Button>
				<Separator />
				<Button AA:Language.Hint="toolbar-setting/group/node/up" Command="{Binding NodeUpCommand}" CommandParameter="{Binding SelectedItem,ElementName=treeGroup}">
					<Image Source="{x:Static AM:AppResource.CommonUpImage}" Style="{StaticResource DefaultImage}" />
				</Button>
				<Button AA:Language.Hint="toolbar-setting/group/node/down" Command="{Binding NodeDownCommand}" CommandParameter="{Binding SelectedItem,ElementName=treeGroup}">
					<Image Source="{x:Static AM:AppResource.CommonDownImage}" Style="{StaticResource DefaultImage}" />
				</Button>
				<Separator />
				<Button AA:Language.Hint="toolbar-setting/group/node/remove" Command="{Binding NodeRemoveCommand}" CommandParameter="{Binding SelectedItem,ElementName=treeGroup}">
					<Image Source="{x:Static AM:AppResource.CommonRemoveImage}" Style="{StaticResource DefaultImage}" />
				</Button>
				<!--</StackPanel>-->
			</ToolBar>
			<!--</TkoolBarTray>-->
			<TreeView x:Name="treeGroup" Grid.Row="1" ItemsSource="{Binding GroupTree}" >
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="SelectedItemChanged">
						<i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}" CommandParameter="{Binding SelectedItem, ElementName=treeGroup}" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
				<TreeView.ItemTemplate>
					<HierarchicalDataTemplate ItemsSource="{Binding Nodes}" >
						<StackPanel Orientation="Horizontal">
							<Image Style="{StaticResource DefaultImage}" Source="{Binding Image}" />
							<TextBlock Text="{Binding DisplayText}" />
						</StackPanel>
					</HierarchicalDataTemplate>
				</TreeView.ItemTemplate>
				<TreeView.ItemContainerStyle>
					<Style TargetType="{x:Type TreeViewItem}">
						<Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
						<Setter Property="IsSelected" Value="{Binding IsSelected}" />
					</Style>
				</TreeView.ItemContainerStyle>
			</TreeView>
		</Grid>
		<GridSplitter Grid.Column="2" Style="{StaticResource DefaultVericalGridSplitter}" />
		<AV:LauncherListItemsControl
			Grid.Column="3"
			DataContext="{Binding LauncherItems}"
			x:Name="listItems"
			SelectedLauncherModel="{Binding DataContext.SelectedLauncherItem, RelativeSource={RelativeSource AncestorType=AV:CommonDataUserControl}, Mode=TwoWay}"
			DoubleClickCommand="{Binding DataContext.AppendChildLauncherItemCommand, RelativeSource={RelativeSource AncestorType=AV:CommonDataUserControl}}"
		/>
	</Grid>
</AV:CommonDataUserControl>
