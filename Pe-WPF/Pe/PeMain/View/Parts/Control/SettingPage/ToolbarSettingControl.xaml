<AV:CommonDataUserControl 
	x:Class="ContentTypeTextNet.Pe.PeMain.View.Parts.Control.SettingPage.ToolbarSettingControl"
	xmlns:AM="clr-namespace:ContentTypeTextNet.Pe.PeMain"
	xmlns:AV="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Control"
	xmlns:AP="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts"
	xmlns:AC="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Converter"
	xmlns:SC="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=SharedLibrary"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	mc:Ignorable="d" 
	d:DesignHeight="318" d:DesignWidth="517"
>
	<AV:CommonDataUserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/View/Parts/Resource/ImageDictionary.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<SC:LogicalIsNotNullConverter x:Key="LogicalIsNotNullConverter" />
			<AC:DisplayTextConverter x:Key="DisplayTextConverter" />
			<AC:SelectedNodeAndLauncherItemConverter x:Key="SelectedNodeAndLauncherItemConverter" />
			<AC:TreeListLauncherItemRelationConverter x:Key="TreeListLauncherItemRelationConverter" />
		</ResourceDictionary>
	</AV:CommonDataUserControl.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="200"/>
			<ColumnDefinition Width="198*"/>
			<ColumnDefinition Width="119*"/>
		</Grid.ColumnDefinitions>
		<GroupBox HorizontalAlignment="Stretch">
			<GroupBox.Header>
				<Grid HorizontalAlignment="Stretch" Width="180">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto" MinWidth="42" />
					</Grid.ColumnDefinitions>
					<ComboBox Grid.Column="0" SelectedIndex="0" DisplayMemberPath="DisplayText" SelectedItem="{Binding SelectedToolbar}" ItemsSource="{Binding ToolbarItemList, Mode=OneTime}" />
					<Button Grid.Column="1" Content="screen" />
				</Grid>
			</GroupBox.Header>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="95*"/>
					<ColumnDefinition Width="91*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="24*"/>
					<RowDefinition Height="32*"/>
					<RowDefinition Height="36*"/>
					<RowDefinition Height="36*"/>
					<RowDefinition Height="37*"/>
					<RowDefinition Height="125*"/>
				</Grid.RowDefinitions>
				<Label Content="group" HorizontalAlignment="Left" Grid.Row="0" VerticalAlignment="Top"/>
				<ComboBox Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" ItemsSource="{Binding DefaultGroupList}" SelectedValue="{Binding SelectedToolbar.DefaultGroupId}" SelectedIndex="{Binding DefaultGroupIndex}" SelectedValuePath="Id" >
					<ComboBox.ItemTemplate>
						<ItemContainerTemplate>
							<ContentPresenter Content="{Binding Converter={StaticResource DisplayTextConverter}}" />
						</ItemContainerTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>

				<Label Content="dock" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Top" />
				<ComboBox Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" ItemsSource="{Binding Source={x:Static AP:EnumList.DockTypeList}}" SelectedItem="{Binding SelectedToolbar.DockType, Mode=TwoWay}" />

				<Label Content="icon" HorizontalAlignment="Left" Grid.Row="2" VerticalAlignment="Top"/>
				<ComboBox Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Top" ItemsSource="{Binding Source={x:Static AP:EnumList.PlainIconScaleList}}" SelectedItem="{Binding SelectedToolbar.IconScale, Mode=TwoWay}" />

				<Label Content="font" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" />
				<AV:FontSelectControl
					Grid.Row="3" Grid.Column="1"
					FamilyName="{Binding SelectedToolbar.FontFamily}"
					IsBold="{Binding SelectedToolbar.FontBold}"
					IsItalic="{Binding SelectedToolbar.FontItalic}"
					Size="{Binding SelectedToolbar.FontSize}"
					SizeMinimum="{x:Static AM:Constants.ToolbarFontMinimumSize}"
					SizeMaximum="{x:Static AM:Constants.ToolbarFontMaximumSize}"
				/>

				<Label Content="text length" Grid.Row="4" HorizontalAlignment="Stretch" VerticalAlignment="Top" />
				<!--<Slider Grid.Row="4" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Value="{Binding SelectedToolbar.TextWidth, Mode=TwoWay}" Minimum="{Binding Source={x:Static AM:Constants.ToolbarTextMinimumLength}}" Maximum="{Binding Source={x:Static AM:Constants.ToolbarTextMaximumLength}}" />-->
				<AV:DoubleSliderControl
					Grid.Row="4"
					Grid.Column="1"
					Value="{Binding SelectedToolbar.TextWidth, Mode=TwoWay}"
					Minimum="{Binding Source={x:Static AM:Constants.ToolbarTextMinimumLength}}"
					Maximum="{Binding Source={x:Static AM:Constants.ToolbarTextMaximumLength}}"
				/>

				<StackPanel HorizontalAlignment="Left" Height="71" Grid.Row="5" Grid.ColumnSpan="2" VerticalAlignment="Top">
					<CheckBox Content="show text" HorizontalAlignment="Stretch" IsChecked="{Binding SelectedToolbar.TextVisible}" />
					<CheckBox Content="auto hide" HorizontalAlignment="Stretch" IsChecked="{Binding SelectedToolbar.AutoHide}" />
					<CheckBox Content="topmost" HorizontalAlignment="Stretch" IsChecked="{Binding SelectedToolbar.IsTopmost}" />
					<CheckBox Content="visible" HorizontalAlignment="Stretch" IsChecked="{Binding SelectedToolbar.IsVisible}" />
				</StackPanel>
			</Grid>
		</GroupBox>
		<Grid Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>
			<!--<ToolBarTray HorizontalAlignment="Stretch" VerticalAlignment="Stretch">-->
			<ToolBar ToolBarTray.IsLocked="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
					<!--<StackPanel Orientation="Horizontal">-->
						<Button Content="group" Command="{Binding CreateGroupCommand}" />
						<Button 
							Content="item" 
							IsEnabled="{Binding SelectedLauncherItem, ElementName=ItemList, Converter={StaticResource LogicalIsNotNullConverter}}" 
							Command="{Binding CreateLauncherItemCommand}" 
						>
							<Button.CommandParameter>
								<MultiBinding Converter="{StaticResource SelectedNodeAndLauncherItemConverter}">
									<Binding Path="SelectedItem" ElementName="GroupTree" />
									<Binding Path="SelectedLauncherItem" ElementName="ItemList" />
								</MultiBinding>
							</Button.CommandParameter>
						</Button>
						
						<Button Content="up" Command="{Binding NodeUpCommand}" CommandParameter="{Binding SelectedItem,ElementName=GroupTree}" />
						<Button Content="down" Command="{Binding NodeDownCommand}" CommandParameter="{Binding SelectedItem,ElementName=GroupTree}" />
						<Button Content="remove" Command="{Binding NodeRemoveCommand}" CommandParameter="{Binding SelectedItem,ElementName=GroupTree}"  />
					<!--</StackPanel>-->
				</ToolBar>
			<!--</TkoolBarTray>-->
			<TreeView Grid.Row="1" ItemsSource="{Binding GroupTree}" x:Name="GroupTree" >
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="SelectedItemChanged">
						<i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}" CommandParameter="{Binding SelectedItem, ElementName=GroupTree}" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
				<TreeView.ItemTemplate>
					<HierarchicalDataTemplate ItemsSource="{Binding Nodes}" >
						<StackPanel Orientation="Horizontal">
							<Image Style="{StaticResource ImageRenderStyle}" Source="{Binding Image}" />
							<TextBlock Text="{Binding DisplayText}" />
						</StackPanel>
					</HierarchicalDataTemplate>
				</TreeView.ItemTemplate>
				<TreeView.ItemContainerStyle>
					<Style TargetType="{x:Type TreeViewItem}">
						<Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
						<Setter Property="IsSelected" Value="{Binding IsSelected}" />
					</Style>
				</TreeView.ItemContainerStyle>
			</TreeView>
		</Grid>
		<AV:LauncherListItemsControl
			Grid.Column="2"
			DataContext="{Binding LauncherItems}"
			x:Name="ItemList"
			SelectedLauncherModel="{Binding DataContext.SelectedLauncherItem, RelativeSource={RelativeSource AncestorType=AV:CommonDataUserControl}, Mode=TwoWay}"
		/>
	</Grid>
</AV:CommonDataUserControl>
