<AW:ViewModelCommonDataWindow
	x:Class="ContentTypeTextNet.Pe.PeMain.View.TemplateWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:AP="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts"
	xmlns:AA="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Attached"
	xmlns:AW="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Window"
	xmlns:AVM="clr-namespace:ContentTypeTextNet.Pe.PeMain.ViewModel"
	xmlns:AC="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Converter"
	xmlns:AM="clr-namespace:ContentTypeTextNet.Pe.PeMain"
	xmlns:SC="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=SharedLibrary"
	x:TypeArguments="AVM:TemplateViewModel"
	Title="TemplateWindow"
	AA:Language.Word="window/template"
	x:Name="root"
	Visibility="{Binding Visibility}"
	WindowState="{Binding WindowState}"
	Left="{Binding WindowLeft, Mode=TwoWay}"
	Top="{Binding WindowTop, Mode=TwoWay}"
	Width="{Binding WindowWidth, Mode=TwoWay}"
	Height="{Binding WindowHeight, Mode=TwoWay}"
	Topmost="{Binding IsTopmost}"
	Style="{DynamicResource ClipboardTemplateDefualtWindow}"
	
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	d:DesignWidth="407" d:DesignHeight="222"
>
	<AW:CommonDataWindow.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/View/Parts/Resource/ClipboardTemplateDictionary.xaml"/>
				<ResourceDictionary Source="/View/Parts/Resource/ImageDictionary.xaml"/>
				<ResourceDictionary Source="/View/Parts/Resource/TextBoxDictionary.xaml"/>
				<ResourceDictionary Source="/View/Parts/Resource/GridSplitterDictionary.xaml"/>
				<ResourceDictionary Source="/View/Parts/Resource/LabelDictionary.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<SC:LogicalNotConverter x:Key="LogicalNotConverter" />
			<SC:LogicalIsNotNullConverter x:Key="LogicalIsNotNullConverter" />
			<SC:DoubleGridLengthConverter x:Key="DoubleGridLengthConverter" />
			<AC:DisplayTextConverter x:Key="DisplayTextConverter" />
			<SC:BooleanFontWeightConverter x:Key="BooleanFontWeightConverter" />
			<SC:BooleanFontStyleConverter x:Key="BooleanFontStyleConverter" />
			<AC:SelectedIndexNumberConverter x:Key="SelectedIndexNumberConverter" />
		</ResourceDictionary>
	</AW:CommonDataWindow.Resources>
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Deactivated">
			<i:InvokeCommandAction Command="{Binding WindowDeactivCommnad}"/>
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<ToolBar Style="{StaticResource ClipboardTemplateDefualtToolbar}" >
			<Button Command="{Binding CreateItemCommand}">
				<StackPanel Orientation="Horizontal">
					<Image Style="{StaticResource DefaultImage}" Source="{Binding Source={x:Static AM:AppResource.CommonAddImage}}" />
					<TextBlock Text="create" AA:Language.Word="template/create" />
				</StackPanel>
			</Button>
			<Button Command="{Binding SaveItemCommand}" IsEnabled="{Binding IsEnabled,ElementName=content}">
				<StackPanel Orientation="Horizontal">
					<Image Style="{StaticResource DefaultImage}" Source="{Binding Source={x:Static AM:AppResource.CommonSaveImage}}" />
					<TextBlock Text="save" AA:Language.Word="template/save" />
				</StackPanel>
			</Button>
			<Separator />
			<Button Command="{Binding RemoveItemCommand}" IsEnabled="{Binding IsEnabled,ElementName=content}" >
				<StackPanel Orientation="Horizontal">
					<Image Style="{StaticResource DefaultImage}" Source="{Binding Source={x:Static AM:AppResource.CommonRemoveImage}}" />
					<TextBlock Text="remove" AA:Language.Word="template/remove" />
				</StackPanel>
			</Button>
			<Separator />
			<ToggleButton IsChecked="{Binding IsTopmost}">
				<StackPanel Orientation="Horizontal">
					<Image Style="{StaticResource DefaultImage}" Source="{Binding Source={x:Static AM:AppResource.CommonPinImage}}" />
					<TextBlock Text="topmost" AA:Language.Word="template/topmost" />
				</StackPanel>
			</ToggleButton>
			<ToggleButton IsChecked="{Binding AppNonProcess.ClipboardWatcher.UsingClipboard}">
				<StackPanel Orientation="Horizontal">
					<Image Style="{StaticResource DefaultImage}" Source="{Binding Source={x:Static AM:AppResource.CommonUsingClipboardImage}}" />
					<TextBlock Text="use clipboard" AA:Language.Word="template/using-clipboard" />
				</StackPanel>
			</ToggleButton>
		</ToolBar>
		<Grid Style="{StaticResource ClipboardTemplateDefaultMainPanel}" Grid.Row="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="{Binding ItemsListWidth, Converter={StaticResource DoubleGridLengthConverter}, Mode=TwoWay}"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid Grid.Column="0">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>
				<StackPanel Grid.Row="0">
					<Image />
					<TextBox />
				</StackPanel>
				<ListBox x:Name="listItems" Grid.Row="1" ItemsSource="{Binding IndexItems}" SelectedItem="{Binding SelectedViewModel}" HorizontalContentAlignment="Stretch">
					<ListBox.ItemTemplate>
						<DataTemplate>
							<Grid>
								<Border x:Name="item" Style="{StaticResource ClipboardTemplateItem}">
									<StackPanel>
										<TextBlock Text="{Binding Name}" />
										<Border Style="{StaticResource IndexItemsStyleInfo}">
											<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
												<Image Style="{StaticResource DefaultImage}" Source="{Binding ItemTypeImage}" Margin="0,0,2,0" />
												<TextBlock Text="{Binding ItemTypeText}" />
											</StackPanel>
										</Border>
									</StackPanel>
								</Border>
								<Border Style="{StaticResource ClipboardTemplateCommandArea}">
									<StackPanel Orientation="Horizontal">
										<StackPanel.Resources>
											<Style TargetType="Button">
												<Setter Property="Focusable" Value="False" />
											</Style>
										</StackPanel.Resources>
										<Button Command="{Binding SendItemCommand}" CommandParameter="{Binding ElementName=root}" AA:Language.Hint="template/command/send" >
											<!-- send -->
											<Image Style="{StaticResource DefaultImage}" Source="{Binding Source={x:Static AM:AppResource.CommonSendImage}}" />
										</Button>
										<Button Command="{Binding CopyItemCommand}" AA:Language.Hint="template/command/copy">
											<!-- copy -->
											<Image Style="{StaticResource DefaultImage}" Source="{Binding Source={x:Static AM:AppResource.CommonCopyImage}}" />
										</Button>
										<Button Command="{Binding DataContext.MoveUpItemCommand, ElementName=root}" CommandParameter="{Binding }" AA:Language.Hint="template/command/up" >
											<!-- up -->
											<Image Style="{StaticResource DefaultImage}" Source="{Binding Source={x:Static AM:AppResource.CommonUpImage}}" />
										</Button>
										<Button Command="{Binding DataContext.MoveDownItemCommand, ElementName=root}" CommandParameter="{Binding }" AA:Language.Hint="template/command/down">
											<!-- down -->
											<Image Style="{StaticResource DefaultImage}" Source="{Binding Source={x:Static AM:AppResource.CommonDownImage}}" />
										</Button>
									</StackPanel>
								</Border>
							</Grid>
						</DataTemplate>
					</ListBox.ItemTemplate>
					<!--<ListBox.ItemContainerStyle>
						<Style TargetType="ListBoxItem">
							<Style.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="IsSelected" Value="True"/>
								</Trigger>
							</Style.Triggers>
						</Style>
					</ListBox.ItemContainerStyle>-->
				</ListBox>
			</Grid>
			<GridSplitter Grid.Column="1" Style="{StaticResource DefaultVericalGridSplitter}" />
			<TabControl x:Name="content" Grid.Column="2" IsEnabled="{Binding SelectedViewModel, Converter={StaticResource LogicalIsNotNullConverter}}">
				<TabItem x:Name="pageSource" Header="source" AA:Language.Word="template/item/source">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<Grid Grid.Row="0" Style="{StaticResource ClipboardTemplateNames}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Label Grid.Column="0"  HorizontalAlignment="Left" VerticalAlignment="Center" Content="name" AA:Language.Word="template/item/name" Style="{StaticResource HeaderLabel}"/>
							<TextBox Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding SelectedViewModel.Name, UpdateSourceTrigger=PropertyChanged}" />
							<CheckBox Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding SelectedViewModel.IsReplace}" Content="replace" AA:Language.Word="template/item/replace" />
							<CheckBox Grid.Column="3" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding SelectedViewModel.IsProgrammableReplace}" Content="T4" AA:Language.Word="template/item/t4" />
						</Grid>
						<Grid Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="{Binding ReplaceListWidth, Converter={StaticResource DoubleGridLengthConverter}, Mode=TwoWay}" />
							</Grid.ColumnDefinitions>
							<TextBox
								x:Name="editSource"
								Grid.Column="0"
								AcceptsReturn="True"
								AcceptsTab="True"
								HorizontalScrollBarVisibility="Auto"
								VerticalScrollBarVisibility="Auto"
								TextWrapping="NoWrap"
								Text="{Binding SelectedViewModel.Source, UpdateSourceTrigger=PropertyChanged}"
								FontFamily="{Binding FontFamily, Mode=OneWay}" FontWeight="{Binding FontBold, Converter={StaticResource BooleanFontWeightConverter}, Mode=OneWay}" FontStyle="{Binding FontItalic, Converter={StaticResource BooleanFontStyleConverter}, Mode=OneWay}" FontSize="{Binding FontSize, Mode=OneWay}"
							/>
							<GridSplitter Grid.Column="1" Style="{StaticResource DefaultVericalGridSplitter}" />
							<ListBox Grid.Column="2" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedItem="{Binding SelectedKeyword}" ItemsSource="{Binding KeywordList}">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="MouseDoubleClick">
										<i:InvokeCommandAction Command="{Binding InsertKeywordCommand}" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
								<ListBox.ItemTemplate>
									<DataTemplate>
										<StackPanel Margin="4">
											<StackPanel.Resources>
												<Style TargetType="TextBlock">
													<Setter Property="TextWrapping" Value="Wrap" />
												</Style>
											</StackPanel.Resources>
											<TextBlock FontWeight="Bold" Text="{Binding Title}" />
											<TextBlock FontWeight="Normal" Margin="10,2,0,2" Text="{Binding Comment}" />
										</StackPanel>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
						</Grid>
					</Grid>
				</TabItem>
				<TabItem Header="preview" AA:Language.Word="template/item/preview" IsEnabled="{Binding SelectedViewModel.IsReplace}" IsSelected="{Binding SelectedViewModel.ReplaceViewSelected}">
					<TextBox
						IsReadOnly="True"
						HorizontalScrollBarVisibility="Auto"
						VerticalScrollBarVisibility="Auto"
						Text="{Binding SelectedViewModel.Replaced}"
						FontFamily="{Binding FontFamily, Mode=OneWay}" FontWeight="{Binding FontBold, Converter={StaticResource BooleanFontWeightConverter}, Mode=OneWay}" FontStyle="{Binding FontItalic, Converter={StaticResource BooleanFontStyleConverter}, Mode=OneWay}" FontSize="{Binding FontSize, Mode=OneWay}"
						Style="{StaticResource DefaultTextBox}"
					/>
				</TabItem>
			</TabControl>
		</Grid>
		<StatusBar Grid.Row="2" Style="{StaticResource ClipboardTemplateDefaultStatusbar}">
			<TextBlock>
				<Run Text="{Binding SelectedIndex, ElementName=listItems, Converter={StaticResource SelectedIndexNumberConverter}}" />
				<Run Text="/" />
				<Run Text="{Binding IndexItems.Count, Mode=OneWay}" />
			</TextBlock>
		</StatusBar>
	</Grid>
</AW:ViewModelCommonDataWindow>
