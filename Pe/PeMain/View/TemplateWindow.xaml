<AW:ViewModelCommonDataWindow
  x:Class="ContentTypeTextNet.Pe.PeMain.View.TemplateWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
  xmlns:AP="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts"
  xmlns:AA="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Attached"
  xmlns:AW="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Window"
  xmlns:AVM="clr-namespace:ContentTypeTextNet.Pe.PeMain.ViewModel"
  xmlns:AC="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Converter"
  xmlns:AM="clr-namespace:ContentTypeTextNet.Pe.PeMain"
  xmlns:SC="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=SharedLibrary"
  xmlns:ACE="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Converter.EnumLanguageConverter" 
  xmlns:ADD="clr-namespace:ContentTypeTextNet.Pe.Library.PeData.Define;assembly=PeData"
  x:TypeArguments="AVM:TemplateViewModel"
  Title="TemplateWindow"
  AA:Language.Word="window/template"
  x:Name="root"
  Style="{DynamicResource ClipboardTemplateDefualtWindow}"
  
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
  d:DesignWidth="407" d:DesignHeight="222"
>
  <AW:CommonDataWindow.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/View/Parts/Resource/IndexItemsDictionary.xaml"/>
        <ResourceDictionary Source="/View/Parts/Resource/ImageDictionary.xaml"/>
        <ResourceDictionary Source="/View/Parts/Resource/TextBoxDictionary.xaml"/>
        <ResourceDictionary Source="/View/Parts/Resource/GridSplitterDictionary.xaml"/>
        <ResourceDictionary Source="/View/Parts/Resource/LabelDictionary.xaml"/>
        <ResourceDictionary Source="/View/Parts/Resource/ComboBoxDictionary.xaml"/>
        <ResourceDictionary Source="/View/Parts/Resource/TextBlockDictionary.xaml"/>
      </ResourceDictionary.MergedDictionaries>
      <SC:LogicalNotConverter x:Key="LogicalNotConverter" />
      <SC:LogicalIsNotNullConverter x:Key="LogicalIsNotNullConverter" />
      <SC:GridDistanceConverter x:Key="GridDistanceConverter" />
      <AC:DisplayTextConverter x:Key="DisplayTextConverter" />
      <SC:BooleanFontWeightConverter x:Key="BooleanFontWeightConverter" />
      <SC:BooleanFontStyleConverter x:Key="BooleanFontStyleConverter" />
      <AC:SelectedIndexNumberConverter x:Key="SelectedIndexNumberConverter" />
      <ACE:TemplateReplaceModeLanguageConverter x:Key="TemplateReplaceModeLanguageConverter" />
    </ResourceDictionary>
  </AW:CommonDataWindow.Resources>
  <i:Interaction.Triggers>
    <i:EventTrigger EventName="Deactivated">
      <i:InvokeCommandAction Command="{Binding WindowDeactivCommnad}"/>
    </i:EventTrigger>
  </i:Interaction.Triggers>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <ToolBar Style="{StaticResource ClipboardTemplateDefualtToolbar}" >
      <Button Command="{Binding CreateItemCommand}">
        <StackPanel Orientation="Horizontal">
          <Image Style="{StaticResource ItemImage}" Source="{Binding Source={x:Static AM:AppResource.CommonAddImage}}" />
          <Label Content="create" AA:Language.Word="template/create" Style="{StaticResource ContentTextLabel}" />
        </StackPanel>
      </Button>
      <Button Command="{Binding SaveItemCommand}" IsEnabled="{Binding IsEnabled,ElementName=content}">
        <StackPanel Orientation="Horizontal">
          <Image Style="{StaticResource ItemImage}" Source="{Binding Source={x:Static AM:AppResource.CommonSaveImage}}" />
          <Label Content="save" AA:Language.Word="template/save" Style="{StaticResource ContentTextLabel}" />
        </StackPanel>
      </Button>
      <Separator />
      <Button Command="{Binding RemoveItemCommand}" IsEnabled="{Binding IsEnabled,ElementName=content}" >
        <StackPanel Orientation="Horizontal">
          <Image Style="{StaticResource ItemImage}" Source="{Binding Source={x:Static AM:AppResource.CommonRemoveImage}}" />
          <Label Content="remove" AA:Language.Word="template/remove" Style="{StaticResource ContentTextLabel}" />
        </StackPanel>
      </Button>
      <Separator />
      <ToggleButton IsChecked="{Binding IsTopmost}" AA:Language.Hint="template/topmost">
        <Image Style="{StaticResource ItemImage}" Source="{Binding Source={x:Static AM:AppResource.CommonPinImage}}" />
      </ToggleButton>
      <ToggleButton IsChecked="{Binding AppNonProcess.ClipboardWatcher.UsingClipboard}">
        <StackPanel Orientation="Horizontal">
          <Image Style="{StaticResource ItemImage}" Source="{Binding Source={x:Static AM:AppResource.CommonUsingClipboardImage}}" />
          <Label Content="use clipboard" AA:Language.Word="template/using-clipboard" Style="{StaticResource ContentTextLabel}" />
        </StackPanel>
      </ToggleButton>
    </ToolBar>
    <Grid Style="{StaticResource ClipboardTemplateDefaultMainPanel}" Grid.Row="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{Binding ItemsListWidth, Converter={StaticResource GridDistanceConverter}, Mode=TwoWay}"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid Grid.Column="0">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBox Grid.Row="0" Text="{Binding FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DefaultTextBox}" />
        <ListBox x:Name="listItems" Grid.Row="1" ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedViewModel}" HorizontalContentAlignment="Stretch">
          <ListBox.ItemTemplate>
            <DataTemplate>
              <Grid>
                <Border x:Name="item" Style="{StaticResource ClipboardTemplateItem}">
                  <StackPanel>
                    <TextBlock Text="{Binding Name}" />
                    <Border Style="{StaticResource IndexItemsStyleInfo}">
                      <StackPanel Orientation="Horizontal">
                        <Image>
                          <Image.Style>
                            <Style TargetType="Image" BasedOn="{StaticResource ItemImage}">
                              <Setter Property="Margin">
                                <Setter.Value>
                                  <Thickness Left="0" Top="0" Right="{StaticResource ItemImageSpace}" Bottom="0" />
                                </Setter.Value>
                              </Setter>
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding TemplateReplaceMode}" Value="{x:Static ADD:TemplateReplaceMode.None}">
                                  <Setter Property="Source" Value="{x:Static AM:AppResource.TemplateReplaceNoneImage}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding TemplateReplaceMode}" Value="{x:Static ADD:TemplateReplaceMode.Text}">
                                  <Setter Property="Source" Value="{x:Static AM:AppResource.TemplateReplaceTextImage}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding TemplateReplaceMode}" Value="{x:Static ADD:TemplateReplaceMode.Program}">
                                  <Setter Property="Source" Value="{x:Static AM:AppResource.TemplateReplaceProgramImage}" />
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </Image.Style>
                        </Image>
                        <!-- AA:Language使うの結構手間だった -->
                        <TextBlock Style="{StaticResource ItemText}" Text="{Binding ItemTypeText}" />
                      </StackPanel>
                    </Border>
                  </StackPanel>
                </Border>
                <Border Style="{StaticResource ClipboardTemplateCommandArea}">
                  <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources>
                      <Style TargetType="Button">
                        <Setter Property="Focusable" Value="False" />
                      </Style>
                    </StackPanel.Resources>
                    <Button Command="{Binding SendItemCommand}" CommandParameter="{Binding ElementName=root}" AA:Language.Hint="template/command/send" >
                      <!-- send -->
                      <Image Style="{StaticResource DefaultImage}" Source="{Binding Source={x:Static AM:AppResource.CommonSendImage}}" />
                    </Button>
                    <Button Command="{Binding CopyItemCommand}" AA:Language.Hint="template/command/copy">
                      <!-- copy -->
                      <Image Style="{StaticResource DefaultImage}" Source="{Binding Source={x:Static AM:AppResource.CommonCopyImage}}" />
                    </Button>
                    <Button Margin="2,0,0,0" Command="{Binding DataContext.MoveUpItemCommand, ElementName=root}" CommandParameter="{Binding }" AA:Language.Hint="template/command/up" >
                      <!-- up -->
                      <Image Style="{StaticResource DefaultImage}" Source="{Binding Source={x:Static AM:AppResource.CommonUpImage}}" />
                    </Button>
                    <Button Command="{Binding DataContext.MoveDownItemCommand, ElementName=root}" CommandParameter="{Binding }" AA:Language.Hint="template/command/down">
                      <!-- down -->
                      <Image Style="{StaticResource DefaultImage}" Source="{Binding Source={x:Static AM:AppResource.CommonDownImage}}" />
                    </Button>
                  </StackPanel>
                </Border>
              </Grid>
            </DataTemplate>
          </ListBox.ItemTemplate>
          <!--<ListBox.ItemContainerStyle>
            <Style TargetType="ListBoxItem">
              <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter Property="IsSelected" Value="True"/>
                </Trigger>
              </Style.Triggers>
            </Style>
          </ListBox.ItemContainerStyle>-->
        </ListBox>
      </Grid>
      <GridSplitter Grid.Column="1" Style="{StaticResource DefaultVericalGridSplitter}" />
      <TabControl x:Name="content" Grid.Column="2" IsEnabled="{Binding SelectedViewModel, Converter={StaticResource LogicalIsNotNullConverter}}">
        <TabItem x:Name="pageSource">
          <TabItem.Header>
            <StackPanel Orientation="Horizontal">
              <Image Source="{x:Static AM:AppResource.TemplateTemplateImage}" Style="{StaticResource ItemImage}" />
              <Label Content="source" AA:Language.Word="template/item/source" Style="{StaticResource ContentTextLabel}" />
            </StackPanel>
          </TabItem.Header>
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Style="{StaticResource ClipboardTemplateNames}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="7*"/>
                <ColumnDefinition Width="3*"/>
              </Grid.ColumnDefinitions>
              <Label Grid.Column="0" VerticalAlignment="Center" Content="name" AA:Language.Word="template/item/name" Target="{Binding ElementName=inputName}" Style="{StaticResource HeaderLabel}"/>
              <TextBox x:Name="inputName" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Text="{Binding SelectedViewModel.Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DefaultTextBox}" />
              <!--<CheckBox Grid.Column="2" Margin="4,0,4,0" VerticalAlignment="Center" Content="replace" AA:Language.Word="template/item/replace" IsChecked="{Binding SelectedViewModel.IsReplace}" />
              <CheckBox Grid.Column="3" VerticalAlignment="Center" Content="T4" AA:Language.Word="template/item/t4" IsChecked="{Binding SelectedViewModel.IsProgrammableReplace}" />-->
              <ComboBox Grid.Column="2" HorizontalAlignment="Stretch" ItemsSource="{Binding Source={x:Static AP:EnumList.TemplateReplaceModeList}}" SelectedItem="{Binding SelectedViewModel.TemplateReplaceMode}" Style="{StaticResource DefaultComboBox}">
                <ComboBox.ItemTemplate>
                  <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                      <Image>
                        <Image.Style>
                          <Style TargetType="Image" BasedOn="{StaticResource ItemImage}">
                            <Setter Property="Margin">
                              <Setter.Value>
                                <Thickness Left="0" Top="0" Right="{StaticResource ItemImageSpace}" Bottom="0" />
                              </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                              <DataTrigger Binding="{Binding}" Value="{x:Static ADD:TemplateReplaceMode.None}">
                                <Setter Property="Source" Value="{x:Static AM:AppResource.TemplateReplaceNoneImage}" />
                              </DataTrigger>
                              <DataTrigger Binding="{Binding}" Value="{x:Static ADD:TemplateReplaceMode.Text}">
                                <Setter Property="Source" Value="{x:Static AM:AppResource.TemplateReplaceTextImage}" />
                              </DataTrigger>
                              <DataTrigger Binding="{Binding}" Value="{x:Static ADD:TemplateReplaceMode.Program}">
                                <Setter Property="Source" Value="{x:Static AM:AppResource.TemplateReplaceProgramImage}" />
                              </DataTrigger>
                            </Style.Triggers>
                          </Style>
                        </Image.Style>
                      </Image>
                      <TextBlock>
                        <TextBlock.Text>
                          <MultiBinding Converter="{StaticResource TemplateReplaceModeLanguageConverter}" >
                            <Binding Path="" />
                            <Binding Path="CommonData.Language" RelativeSource="{RelativeSource AncestorType=Window}" />
                          </MultiBinding>
                        </TextBlock.Text>
                      </TextBlock>
                    </StackPanel>
                  </DataTemplate>
                </ComboBox.ItemTemplate>
              </ComboBox>
            </Grid>
            <Grid Grid.Row="1">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="{Binding ReplaceListWidth, Converter={StaticResource GridDistanceConverter}, Mode=TwoWay}" />
              </Grid.ColumnDefinitions>
              <!--<TextBox
                x:Name="editSource"
                Grid.Column="0"
                AcceptsReturn="True"
                AcceptsTab="True"
                HorizontalScrollBarVisibility="Auto"
                VerticalScrollBarVisibility="Auto"
                TextWrapping="NoWrap"
                Text="{Binding SelectedViewModel.Source, UpdateSourceTrigger=PropertyChanged}"
                FontFamily="{Binding FontFamily, Mode=OneWay}" FontWeight="{Binding FontBold, Converter={StaticResource BooleanFontWeightConverter}, Mode=OneWay}" FontStyle="{Binding FontItalic, Converter={StaticResource BooleanFontStyleConverter}, Mode=OneWay}" FontSize="{Binding FontSize, Mode=OneWay}"
              />-->
              <avalonEdit:TextEditor
                x:Name="editSource"
                ShowLineNumbers="True"
                FontFamily="{Binding FontFamily, Mode=OneWay}" FontWeight="{Binding FontBold, Converter={StaticResource BooleanFontWeightConverter}, Mode=OneWay}" FontStyle="{Binding FontItalic, Converter={StaticResource BooleanFontStyleConverter}, Mode=OneWay}" FontSize="{Binding FontSize, Mode=OneWay}"
                SyntaxHighlighting="{Binding SyntaxHighlighting}"
                Document="{Binding SelectedViewModel.Document}"
              >
                <avalonEdit:TextEditor.Options>
                  <avalonEdit:TextEditorOptions 
                    EnableHyperlinks="False"
                    EnableEmailHyperlinks="False"
                    EnableRectangularSelection="True"
                    EnableTextDragDrop="True"
                    EnableImeSupport="True"
                    CutCopyWholeLine="True"
                    HighlightCurrentLine="True"
                    ShowEndOfLine="True"
                    ShowColumnRuler="False"
                    ShowSpaces="True"
                    ShowTabs="True"
                  />
                </avalonEdit:TextEditor.Options>
              </avalonEdit:TextEditor>
              <GridSplitter Grid.Column="1" Style="{StaticResource DefaultVericalGridSplitter}" />
              <ListBox Grid.Column="2" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedItem="{Binding SelectedKeyword}" ItemsSource="{Binding KeywordList}">
                <i:Interaction.Triggers>
                  <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding InsertKeywordCommand}" />
                  </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBox.InputBindings>
                  <KeyBinding Key="Enter" Command="{Binding InsertKeywordCommand}" />
                </ListBox.InputBindings>
                <ListBox.ItemTemplate>
                  <DataTemplate>
                    <StackPanel Margin="4">
                      <StackPanel.Resources>
                        <Style TargetType="TextBlock">
                          <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                      </StackPanel.Resources>
                      <TextBlock FontWeight="Bold" Text="{Binding Title}" />
                      <TextBlock FontWeight="Normal" Margin="10,2,0,2" Text="{Binding Comment}" />
                    </StackPanel>
                  </DataTemplate>
                </ListBox.ItemTemplate>
              </ListBox>
            </Grid>
          </Grid>
        </TabItem>
        <TabItem IsEnabled="{Binding SelectedViewModel.IsReplace}" IsSelected="{Binding SelectedViewModel.ReplaceViewSelected}">
          <TabItem.Header>
            <StackPanel Orientation="Horizontal">
              <Image Source="{x:Static AM:AppResource.TemplatePreviewImage}" Style="{StaticResource ItemImage}" />
              <Label Content="preview" AA:Language.Word="template/item/preview" Style="{StaticResource ContentTextLabel}" />
            </StackPanel>
          </TabItem.Header>
          <TextBox
            IsReadOnly="True"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Auto"
            Text="{Binding SelectedViewModel.Replaced}"
            FontFamily="{Binding FontFamily, Mode=OneWay}" FontWeight="{Binding FontBold, Converter={StaticResource BooleanFontWeightConverter}, Mode=OneWay}" FontStyle="{Binding FontItalic, Converter={StaticResource BooleanFontStyleConverter}, Mode=OneWay}" FontSize="{Binding FontSize, Mode=OneWay}"
            Style="{StaticResource DefaultTextBox}"
          />
        </TabItem>
      </TabControl>
    </Grid>
    <StatusBar Grid.Row="2" Style="{StaticResource ClipboardTemplateDefaultStatusbar}">
      <TextBlock>
        <Run Text="{Binding SelectedIndex, ElementName=listItems, Converter={StaticResource SelectedIndexNumberConverter}}" />
        <Run Text="/" />
        <Run Text="{Binding IndexItems.Count, Mode=OneWay}" />
      </TextBlock>
    </StatusBar>
  </Grid>
</AW:ViewModelCommonDataWindow>
