<ResourceDictionary
	x:Class="ContentTypeTextNet.Pe.PeMain.View.MainWorker"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Taskbar="http://www.hardcodet.net/taskbar"
	xmlns:local="clr-namespace:ContentTypeTextNet.Pe.PeMain.ViewModel"
	xmlns:UI="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts"
>

	<ContextMenu x:Shared="false" x:Key="TasktrayContextMenu">
		<MenuItem UI:XamlTag.LanguageKey="tasktray/setting" Header="setting" Command="{Binding ShowSettingWindowCommand}" />
		<MenuItem UI:XamlTag.LanguageKey="tasktray/toolbar" Header="toolbar" />
		<MenuItem UI:XamlTag.LanguageKey="tasktray/note"    Header="note" />
		<MenuItem UI:XamlTag.LanguageKey="tasktray/command" Header="command" />
		<MenuItem UI:XamlTag.LanguageKey="tasktray/log"     Header="log" Command="{Binding SwitchLoggingWindowCommand}" IsChecked="{Binding Logging.Visible, Mode=OneWay}" />
		<Separator />
		<MenuItem UI:XamlTag.LanguageKey="tasktray/log" Header="system-env" />
		<Separator />
		<MenuItem UI:XamlTag.LanguageKey="tasktray/about" Header="about" />
		<MenuItem UI:XamlTag.LanguageKey="tasktray/exit" Header="exit" Command="{Binding ExitApplicationCommand}" />
	</ContextMenu>


	<!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
	<Taskbar:TaskbarIcon 
		x:Key="NotifyIcon"
		IconSource="{Binding ApplicationIcon, Mode=OneWay}"
		ToolTipText="Double-click for window, right-click for menu"
		ContextMenu="{StaticResource TasktrayContextMenu}"
	/>
</ResourceDictionary>