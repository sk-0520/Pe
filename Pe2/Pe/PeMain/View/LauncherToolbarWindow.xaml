<W:ViewModelCommonDataWindow
	x:Name="root"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:SC="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.View.Converter;assembly=SharedLibrary"
	xmlns:VM="clr-namespace:ContentTypeTextNet.Pe.PeMain.ViewModel"
	xmlns:UI="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts"
	xmlns:W="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Window"
	xmlns:PC="clr-namespace:ContentTypeTextNet.Pe.PeMain.View.Parts.Converter"
	x:Class="ContentTypeTextNet.Pe.PeMain.View.LauncherToolbarWindow"
	x:TypeArguments="VM:LauncherToolbarViewModel"
	UI:XamlTag.LanguageKey="window/toolbar"
	Title="ToolbarWindow" 
	Height="{Binding FloatHeight, Mode=TwoWay}" 
	Width="{Binding FloatWidth, Mode=TwoWay}"
	Left="{Binding FloatLeft, Mode=TwoWay}" 
	Top="{Binding FloatTop, Mode=TwoWay}"
	ShowInTaskbar="False" 
	WindowStyle="None"
	ResizeMode="CanResizeWithGrip"
	ScrollViewer.VerticalScrollBarVisibility="Disabled"
	WindowStartupLocation="Manual"
	Visibility="{Binding Visibility}" 
	Topmost="{Binding TopMost}"
	AllowsTransparency="True"
	xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
	xmlns:PD="clr-namespace:ContentTypeTextNet.Pe.Library.PeData.Define;assembly=PeData"
	xmlns:SD="clr-namespace:ContentTypeTextNet.Library.SharedLibrary.Define;assembly=SharedLibrary"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	mc:Ignorable="d" 
	d:DesignWidth="300" 
	d:DesignHeight="200"
>
	<W:CommonDataWindow.Resources>
		<xctk:InverseBoolConverter x:Key="InverseBoolConverter" />
		<SC:LogicalMultiOrConverter x:Key="LogicalMultiOrConverter" />
		<SC:LogicalMultiEqualConverter x:Key="LogicalMultiEqualConverter" />

		<PC:LauncherGroupItemDisplayTextConverter x:Key="LauncherGroupItemDisplayTextConverter" />

		<Style x:Key="Image" TargetType="{x:Type Image}">
			<Setter Property="Source" Value="{Binding ToolbarImage, Mode=OneWay}" />
			<Setter Property="Width" Value="{Binding DataContext.IconSize.Width, Mode=OneWay, ElementName=root}" />
			<Setter Property="Height" Value="{Binding DataContext.IconSize.Height, Mode=OneWay, ElementName=root}" />
		</Style>
		<Style x:Key="Text" TargetType="{x:Type TextBlock}">
			<Setter Property="Text" Value="{Binding ToolbarText, Mode=OneWay}" />
			<Setter Property="TextTrimming" Value="CharacterEllipsis" />
			<Setter Property="Visibility" Value="{Binding DataContext.TextVisible, Mode=OneWay, ElementName=root}" />
		</Style>

		<Style x:Key="ArrowParent" TargetType="Grid">
			<Setter Property="IsHitTestVisible" Value="False" />
			<Setter Property="Margin" Value="4,3,4,3" />
		</Style>
		<Style x:Key="ArrowContent" TargetType="Path">
			<Setter Property="Width" Value="7" />
			<Setter Property="Height" Value="4" />
			<Setter Property="Data" Value="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z" />
			<Setter Property="Fill" Value="#FF000000" />
		</Style>
		<Style x:Key="DropDownPopup" TargetType="Popup">
			<Setter Property="HorizontalOffset" Value="1" />
			<Setter Property="VerticalOffset" Value="1" />
			<Setter Property="AllowsTransparency" Value="True" />
			<Setter Property="StaysOpen" Value="False" />
			<Setter Property="Placement" Value="Bottom" />
			<Setter Property="Focusable" Value="False" />
		</Style>
		<Style x:Key="DropDownPopupBorder" TargetType="Border">
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" />
			<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
		</Style>

		<Style x:Key="LauncherDropDown" TargetType="xctk:DropDownButton">
			<Setter Property="Width" Value="{Binding DataContext.ButtonSize.Width, Mode=OneWay, ElementName=root}" />
			<Setter Property="Height" Value="{Binding DataContext.ButtonSize.Height, Mode=OneWay, ElementName=root}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type xctk:DropDownButton}">
						<Grid x:Name="MainGrid" SnapsToDevicePixels="True">
							<xctk:ButtonChrome x:Name="ControlChrome" Background="{TemplateBinding Background}" RenderEnabled="{TemplateBinding IsEnabled}">
								<ToggleButton
									x:Name="PART_DropDownButton"
									IsTabStop="False"
									Focusable="False"
									IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
									IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
									BorderThickness="0"
									Margin="{TemplateBinding Margin}"
									Padding="{TemplateBinding Padding}"
								>
									<ToggleButton.Template>
										<ControlTemplate TargetType="ToggleButton">
											<ContentPresenter />
										</ControlTemplate>
									</ToggleButton.Template>
									<ToggleButton 
											x:Name="PART_ToggleButton"
											Grid.Column="1"
											IsTabStop="False"
											Focusable="False"
											IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
											IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, 
											Converter={StaticResource InverseBoolConverter}}"
											BorderThickness="0"
										>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="{Binding DataContext.MenuWidth, ElementName=root}" />
											</Grid.ColumnDefinitions>
											<ContentPresenter
													Name="ActionButtonContent"
													Margin="{TemplateBinding Padding}"
													Content="{TemplateBinding Content}"
													ContentTemplate="{TemplateBinding ContentTemplate}"
													VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													RecognizesAccessKey="true"
												/>
											<Grid x:Name="arrowGlyph" Grid.Column="1" Style="{StaticResource ArrowParent}">
												<Path Style="{StaticResource ArrowContent}" />
											</Grid>
										</Grid>
									</ToggleButton>
								</ToggleButton>
							</xctk:ButtonChrome>
							<Popup 
								x:Name="PART_Popup" 
								Style="{StaticResource DropDownPopup}"
								IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}"
							>
								<Border Style="{StaticResource DropDownPopupBorder}">
									<ContentPresenter Content="{TemplateBinding DropDownContent}" />
								</Border>
							</Popup>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="LauncherSplit" TargetType="xctk:SplitButton">
			<Setter Property="Width" Value="{Binding DataContext.ButtonSize.Width, Mode=OneWay, ElementName=root}" />
			<Setter Property="Height" Value="{Binding DataContext.ButtonSize.Height, Mode=OneWay, ElementName=root}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type xctk:SplitButton}">
						<Grid x:Name="MainGrid" SnapsToDevicePixels="True">
							<xctk:ButtonChrome x:Name="ControlChrome" Background="{TemplateBinding Background}" RenderEnabled="{TemplateBinding IsEnabled}">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="{Binding DataContext.MenuWidth, ElementName=root}" />
									</Grid.ColumnDefinitions>
									<Button
										x:Name="PART_ActionButton"
										Grid.Column="0"
										IsTabStop="False"
										Focusable="False"
										Margin="{TemplateBinding Margin}"
										HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										Padding="{TemplateBinding Padding}"
										BorderThickness="0"
									>
										<Button.Template>
											<ControlTemplate TargetType="Button">
												<ContentPresenter />
											</ControlTemplate>
										</Button.Template>
										<Grid>
											<xctk:ButtonChrome
												x:Name="ActionButtonChrome"
												RenderNormal="True"
												RenderEnabled="{TemplateBinding IsEnabled}"
												RenderMouseOver="{Binding IsMouseOver, ElementName=PART_ActionButton}"
												RenderPressed="{Binding IsPressed, ElementName=PART_ActionButton}"
												BorderThickness="0"
											>
												<ContentPresenter
													Name="ActionButtonContent"
													Margin="{TemplateBinding Padding}"
													Content="{TemplateBinding Content}"
													ContentTemplate="{TemplateBinding ContentTemplate}"
													VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
													HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													RecognizesAccessKey="true"
												/>
											</xctk:ButtonChrome>
										</Grid>
									</Button>
									<ToggleButton 
										x:Name="PART_ToggleButton"
										Grid.Column="1"
										IsTabStop="False"
										Focusable="False"
										IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
										IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, 
										Converter={StaticResource InverseBoolConverter}}"
										BorderThickness="0"
									>
										<ToggleButton.Template>
											<ControlTemplate TargetType="ToggleButton">
												<ContentPresenter />
											</ControlTemplate>
										</ToggleButton.Template>
										<xctk:ButtonChrome
												x:Name="ToggleButtonChrome"
												RenderNormal="True"
												RenderChecked="{TemplateBinding IsOpen}"
												RenderEnabled="{TemplateBinding IsEnabled}"
												BorderThickness="0"
											>
											<xctk:ButtonChrome.RenderMouseOver>
												<MultiBinding Converter="{StaticResource LogicalMultiOrConverter}">
													<Binding ElementName="PART_ActionButton" Path="IsMouseOver"/>
													<Binding ElementName="PART_ToggleButton" Path="IsMouseOver"/>
												</MultiBinding>
											</xctk:ButtonChrome.RenderMouseOver>
											<xctk:ButtonChrome.RenderPressed>
												<MultiBinding Converter="{StaticResource LogicalMultiOrConverter}">
													<Binding ElementName="PART_ActionButton" Path="IsPressed"/>
													<Binding ElementName="PART_ToggleButton" Path="IsPressed"/>
												</MultiBinding>
											</xctk:ButtonChrome.RenderPressed>
											<Grid x:Name="arrowGlyph" Style="{StaticResource ArrowParent}">
												<Path Style="{StaticResource ArrowContent}" />
											</Grid>
										</xctk:ButtonChrome>
									</ToggleButton>
								</Grid>
							</xctk:ButtonChrome>

							<Popup 
								x:Name="PART_Popup"
								Style="{StaticResource DropDownPopup}"
								IsOpen="{Binding IsChecked, ElementName=PART_ToggleButton}"
							>
								<Border Style="{StaticResource DropDownPopupBorder}">
									<ContentPresenter Content="{TemplateBinding DropDownContent}" />
								</Border>
							</Popup>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<!--メニューを閉じる用-->
		<Style x:Key="PopupClose">
			<EventSetter  Event="Button.Click" Handler="Element_Click" />
			<EventSetter  Event="MenuItem.Click" Handler="Element_Click" />
		</Style>

		<Style x:Key="PopupCloseMenu" TargetType="MenuItem" BasedOn="{StaticResource PopupClose}">
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		</Style>

		<Style x:Key="GroupMenu" TargetType="MenuItem" BasedOn="{StaticResource PopupCloseMenu}">
			<Setter Property="Header" Value="{Binding Converter={StaticResource LauncherGroupItemDisplayTextConverter}}" />
			<Setter Property="Command" Value="{Binding DataContext.GroupChangeCommand, Source={x:Reference root}}" />
			<Setter Property="CommandParameter" Value="{Binding}" />
			<Setter Property="IsChecked">
				<Setter.Value>
					<MultiBinding Converter="{StaticResource LogicalMultiEqualConverter}" Mode="OneWay">
						<Binding RelativeSource="{RelativeSource Self}" Path="DataContext"  />
						<Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" Path="DataContext.SelectedGroup"  />
					</MultiBinding>
				</Setter.Value>
			</Setter>
		</Style>

		<!--  Cannot find source for binding with reference 'RelativeSource FindAncestor, AncestorType='System.Windows.Controls.ItemsControl', AncestorLevel='1''. BindingExpression:Path=HorizontalContentAlignment; DataItem=null; target element is 'MenuItem' (Name=''); -->
		<Style x:Key="_b" TargetType="MenuItem">
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		</Style>

		<!--<CollectionViewSource x:Key="GroupItems" Source="{Binding GroupItems, Mode=OneWay}" />-->
	</W:CommonDataWindow.Resources>

	<W:CommonDataWindow.ContextMenu>
		<ContextMenu ItemsSource="{Binding GroupItems, Mode=OneWay}">
			<ContextMenu.ItemContainerStyle>
				<Style TargetType="MenuItem" BasedOn="{StaticResource GroupMenu}" />
			</ContextMenu.ItemContainerStyle>
		</ContextMenu>
	</W:CommonDataWindow.ContextMenu>
	<!--<WindowChrome.WindowChrome>
		<WindowChrome
			CaptionHeight="0"
			GlassFrameThickness="0,0,0,-1"
			NonClientFrameEdges="Bottom"
			ResizeBorderThickness="0"
			UseAeroCaptionButtons="False"
		/>
	</WindowChrome.WindowChrome>-->

	<StackPanel Orientation="{Binding Orientation, Mode=OneWay}" >

		<Rectangle 
			Width="{Binding CaptionWidth, Mode=OneWay}" 
			Height="{Binding CaptionHeight, Mode=OneWay}" 
			Visibility="{Binding CaptionVisibility}" 
			Fill="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
			Cursor="{Binding CaptionCursor, Mode=OneWay}"
			MouseLeftButtonDown="Caption_MouseLeftButton"
		/>

		<!-- メインボタン -->
		<xctk:DropDownButton Style="{StaticResource LauncherDropDown}" >
			<xctk:DropDownButton.Content>
				<StackPanel>
					<Image Style="{StaticResource Image}"/>
					<TextBlock Style="{StaticResource Text}" />
				</StackPanel>
			</xctk:DropDownButton.Content>
			<xctk:DropDownButton.DropDownContent>
				<StackPanel>
					<Label Content="toolbar pos" />
					<Grid>
						<Grid.Resources>
							<Style x:Key="PopupClose" TargetType="Button" BasedOn="{StaticResource PopupClose}">
								<Setter Property="Command" Value="{Binding PositionChangeCommand}" />
							</Style>
						</Grid.Resources>
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition />
							<RowDefinition />
						</Grid.RowDefinitions>
						<Button Grid.Row="0" Grid.Column="1" CommandParameter="{x:Static SD:DockType.Top}" Style="{StaticResource PopupClose}">↑</Button>
						<Button Grid.Row="1" Grid.Column="0" CommandParameter="{x:Static SD:DockType.Left}" Style="{StaticResource PopupClose}">←</Button>
						<Button Grid.Row="1" Grid.Column="1" CommandParameter="{x:Static SD:DockType.None}" Style="{StaticResource PopupClose}">□</Button>
						<Button Grid.Row="1" Grid.Column="2" CommandParameter="{x:Static SD:DockType.Right}" Style="{StaticResource PopupClose}">→</Button>
						<Button Grid.Row="2" Grid.Column="1" CommandParameter="{x:Static SD:DockType.Bottom}" Style="{StaticResource PopupClose}">↓</Button>
					</Grid>
					<Separator />
					<MenuItem Header="topmost" UI:XamlTag.LanguageKey="topmost" Style="{StaticResource PopupCloseMenu}" />
					<MenuItem Header="auto hide" UI:XamlTag.LanguageKey="autohide" Style="{StaticResource PopupCloseMenu}" />
					<Separator />
					<MenuItem Header="hide" UI:XamlTag.LanguageKey="hide" Style="{StaticResource PopupCloseMenu}" />
					<Separator />
					<ItemsControl ItemsSource="{Binding GroupItems, Mode=OneWay}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<MenuItem Style="{StaticResource GroupMenu}" />
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</StackPanel>
			</xctk:DropDownButton.DropDownContent>
		</xctk:DropDownButton>

		<ItemsControl ItemsSource="{Binding LauncherItems, Mode=OneWay}" IsTabStop="False">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel Orientation="{Binding Orientation, Mode=OneWay}" />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
			<ItemsControl.ItemTemplate>
				<DataTemplate>
					<StackPanel Orientation="Vertical">

						<!-- ファイル -->
						<xctk:SplitButton Visibility="{Binding VisibilityFile, Mode=OneWay}" Style="{StaticResource LauncherSplit}" Command="{Binding ExecuteCommand}">
							<xctk:SplitButton.Content>
								<StackPanel Orientation="Horizontal">
									<Image Style="{StaticResource Image}"/>
									<TextBlock Style="{StaticResource Text}" />
								</StackPanel>
							</xctk:SplitButton.Content>
							<xctk:SplitButton.DropDownContent>
								<StackPanel>
									<TextBlock Text="execute" />
									<StackPanel Orientation="Horizontal">
										<Button Content="normal" Command="{Binding ExecuteCommand}" Style="{StaticResource PopupClose}" />
										<Button Content="extra"  Style="{StaticResource PopupClose}" />
									</StackPanel>
									<Separator/>
									<TextBlock Text="file" />
									<StackPanel Orientation="Horizontal">
										<Button Content="parent dir"  Style="{StaticResource PopupClose}" />
										<Button Content="work dir"  Style="{StaticResource PopupClose}" />
									</StackPanel>
									<Separator/>
									<TextBlock Text="clipboard" />
									<StackPanel Orientation="Horizontal">
										<Button Content="command" Style="{StaticResource PopupClose}" />
										<Button Content="parent dir" Style="{StaticResource PopupClose}" />
										<Button Content="work dir" />
									</StackPanel>
									<TextBlock Text="others" />
									<StackPanel Orientation="Horizontal">
										<Button Content="setting" Style="{StaticResource PopupClose}" />
										<Button Content="property" Style="{StaticResource PopupClose}" />
									</StackPanel>
								</StackPanel>
							</xctk:SplitButton.DropDownContent>
						</xctk:SplitButton>

						<!-- ディレクトリ -->
						<!--<xctk:DropDownButton Visibility="{Binding VisibilityDirectory, Mode=OneWay}" Style="{StaticResource LauncherDropDown}">
							<StackPanel Orientation="Horizontal">
								<Image Style="{StaticResource Image}"/>
								<TextBlock Style="{StaticResource Text}" />
							</StackPanel>
						</xctk:DropDownButton>-->

						<!-- コマンド -->
						<xctk:SplitButton Visibility="{Binding VisibilityCommand, Mode=OneWay}" Style="{StaticResource LauncherSplit}"  Command="{Binding ExecuteCommand}" >
							<xctk:SplitButton.Content>
								<StackPanel Orientation="Horizontal">
									<Image Style="{StaticResource Image}"/>
									<TextBlock Style="{StaticResource Text}" />
								</StackPanel>
							</xctk:SplitButton.Content>
							<xctk:SplitButton.DropDownContent>
								<StackPanel>
									<TextBlock Text="execute" />
									<StackPanel Orientation="Horizontal">
										<Button Content="normal" Command="{Binding ExecuteCommand}" Style="{StaticResource PopupClose}" />
										<Button Content="extra" Style="{StaticResource PopupClose}" />
									</StackPanel>
									<Separator/>
									<TextBlock Text="clipboard" />
									<StackPanel Orientation="Horizontal">
										<Button Content="command" Style="{StaticResource PopupClose}" />
									</StackPanel>
									<TextBlock Text="others" />
									<StackPanel Orientation="Horizontal">
										<Button Content="setting" Style="{StaticResource PopupClose}" />
									</StackPanel>
								</StackPanel>
							</xctk:SplitButton.DropDownContent>
						</xctk:SplitButton>
					</StackPanel>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
		</ItemsControl>
	</StackPanel>


</W:ViewModelCommonDataWindow>
