
// <auto-generated>
// [T4] build 2022-03-23 13:44:51Z(UTC)
// </auto-generated>

namespace ContentTypeTextNet.Pe.Bridge.Models.Data
{
    /// <summary>
    /// ランチャーアイテムID。
    /// </summary>
    public readonly record struct LauncherItemId: System.IEquatable<LauncherItemId>
    {
        /// <summary>
        /// 生成。
        /// </summary>
        public LauncherItemId(System.Guid rawId)
        {
            Id = rawId;
        }

        /// <summary>
        /// 生成。
        /// </summary>
        public LauncherItemId(LauncherItemId id)
        {
            Id = id.Id;
        }

        #region property

        /// <summary>
        /// 生ID。
        /// </summary>
        public System.Guid Id { get; }

        #endregion

        #region property

        /// <summary>
        /// 空ID。
        /// </summary>
        public static LauncherItemId Empty
        {
            get
            {
                return new LauncherItemId(default(System.Guid));
            }
        }

        #endregion

        #region function

        /// <summary>
        ///  <see cref="LauncherItemId"/>に変換。
        /// </summary>
        /// <param name="s">入力文字列。</param>
        /// <param name="result">変更成功。</param>
        /// <returns></returns>
        public static  bool TryParse(string s, out LauncherItemId result)
        {
            if(System.Guid.TryParse(s, out var val)) {
                result = new LauncherItemId(val);
                return true;
            }

            result = default;
            return false;
        }

        #endregion

        #region IEquatable

        public bool Equals(LauncherItemId other)
        {
            return Id == other.Id;
        }

        #endregion

        #region object

        public override int GetHashCode()
        {
            return Id.GetHashCode();
        }

        #endregion
    }
}
