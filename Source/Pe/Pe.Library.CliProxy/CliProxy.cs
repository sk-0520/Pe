// <auto-generated>
// [T4] build 2024-11-15 11:59:34Z(UTC)
// </auto-generated>
namespace ContentTypeTextNet.Pe.Library.CliProxy.System
{
    /// <inheritdoc cref="global::System.Environment"/>
    public interface IEnvironmentProxy
    {
        #region property (20)
        /// <inheritdoc cref="global::System.Environment.TickCount"/>
        public static global::System.Int32 TickCount {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.ExitCode"/>
        public static global::System.Int32 ExitCode {
            get;
            set;
        }

        /// <inheritdoc cref="global::System.Environment.CommandLine"/>
        public static global::System.String CommandLine {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.CurrentDirectory"/>
        public static global::System.String CurrentDirectory {
            get;
            set;
        }

        /// <inheritdoc cref="global::System.Environment.SystemDirectory"/>
        public static global::System.String SystemDirectory {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.MachineName"/>
        public static global::System.String MachineName {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.ProcessorCount"/>
        public static global::System.Int32 ProcessorCount {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.SystemPageSize"/>
        public static global::System.Int32 SystemPageSize {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.NewLine"/>
        public static global::System.String NewLine {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.Version"/>
        public static global::System.Version Version {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.WorkingSet"/>
        public static global::System.Int64 WorkingSet {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.OSVersion"/>
        public static global::System.OperatingSystem OSVersion {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.StackTrace"/>
        public static global::System.String StackTrace {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.Is64BitProcess"/>
        public static global::System.Boolean Is64BitProcess {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.Is64BitOperatingSystem"/>
        public static global::System.Boolean Is64BitOperatingSystem {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.HasShutdownStarted"/>
        public static global::System.Boolean HasShutdownStarted {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.UserName"/>
        public static global::System.String UserName {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.UserInteractive"/>
        public static global::System.Boolean UserInteractive {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.UserDomainName"/>
        public static global::System.String UserDomainName {
            get;
        }

        /// <inheritdoc cref="global::System.Environment.CurrentManagedThreadId"/>
        public static global::System.Int32 CurrentManagedThreadId {
            get;
        }

        #endregion

        #region function (36)
        /// <inheritdoc cref="global::System.Environment.Exit(System.Int32)"/>
        /// <inheritdoc cref="global::System.Environment.get_CurrentDirectory()"/>
        /// <inheritdoc cref="global::System.Environment.set_CurrentDirectory(System.String)"/>
        /// <inheritdoc cref="global::System.Environment.get_SystemDirectory()"/>
        /// <inheritdoc cref="global::System.Environment.get_ProcessorCount()"/>
        /// <inheritdoc cref="global::System.Environment.get_SystemPageSize()"/>
        /// <inheritdoc cref="global::System.Environment.GetEnvironmentVariable(System.String)"/>
        /// <inheritdoc cref="global::System.Environment.GetEnvironmentVariables()"/>
        /// <inheritdoc cref="global::System.Environment.SetEnvironmentVariable(System.String, System.String)"/>
        /// <inheritdoc cref="global::System.Environment.GetLogicalDrives()"/>
        /// <inheritdoc cref="global::System.Environment.get_Version()"/>
        /// <inheritdoc cref="global::System.Environment.get_WorkingSet()"/>
        /// <inheritdoc cref="global::System.Environment.get_OSVersion()"/>
        /// <inheritdoc cref="global::System.Environment.get_StackTrace()"/>
        /// <inheritdoc cref="global::System.Environment.get_Is64BitProcess()"/>
        /// <inheritdoc cref="global::System.Environment.get_Is64BitOperatingSystem()"/>
        /// <inheritdoc cref="global::System.Environment.get_UserInteractive()"/>
        /// <inheritdoc cref="global::System.Environment.GetFolderPath(System.Environment+SpecialFolder)"/>
        /// <inheritdoc cref="global::System.Environment.GetFolderPath(System.Environment+SpecialFolder, System.Environment+SpecialFolderOption)"/>
        /// <inheritdoc cref="global::System.Environment.get_CurrentManagedThreadId()"/>
        /// <inheritdoc cref="global::System.Environment.get_ExitCode()"/>
        /// <inheritdoc cref="global::System.Environment.FailFast(System.String)"/>
        /// <inheritdoc cref="global::System.Environment.FailFast(System.String, System.Exception)"/>
        /// <inheritdoc cref="global::System.Environment.ExpandEnvironmentVariables(System.String)"/>
        /// <inheritdoc cref="global::System.Environment.get_MachineName()"/>
        /// <inheritdoc cref="global::System.Environment.GetEnvironmentVariable(System.String, System.EnvironmentVariableTarget)"/>
        /// <inheritdoc cref="global::System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)"/>
        /// <inheritdoc cref="global::System.Environment.SetEnvironmentVariable(System.String, System.String, System.EnvironmentVariableTarget)"/>
        /// <inheritdoc cref="global::System.Environment.get_UserDomainName()"/>
        /// <inheritdoc cref="global::System.Environment.get_TickCount()"/>
        /// <inheritdoc cref="global::System.Environment.set_ExitCode(System.Int32)"/>
        /// <inheritdoc cref="global::System.Environment.get_CommandLine()"/>
        /// <inheritdoc cref="global::System.Environment.GetCommandLineArgs()"/>
        /// <inheritdoc cref="global::System.Environment.get_NewLine()"/>
        /// <inheritdoc cref="global::System.Environment.get_HasShutdownStarted()"/>
        /// <inheritdoc cref="global::System.Environment.get_UserName()"/>
        #endregion
    }

    /// <inheritdoc cref="global::System.Environment"/>
    public class DirectEnvironmentProxy
    {
    }
}


