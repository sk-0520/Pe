<Window
  x:Name="root"
  x:Class="ContentTypeTextNet.Pe.Main.Views.Feedback.FeedbackWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:prism="http://prismlibrary.com/"
  xmlns:cef_sharp_wpf="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
  xmlns:sharpdevelop_avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"

  xmlns:app_core_views="clr-namespace:ContentTypeTextNet.Pe.Core.Views;assembly=Pe.Core"
  xmlns:app_main="clr-namespace:ContentTypeTextNet.Pe.Main"
  xmlns:app_main_views_converter="clr-namespace:ContentTypeTextNet.Pe.Main.Views.Converter"

  WindowStartupLocation="CenterScreen"
  Height="500"
  Width="700"
  ResizeMode="CanResizeWithGrip"

  Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
  Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
  BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"

  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d"
>
  <Window.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <app_main_views_converter:TitleConverter x:Key="TitleConverter" />
    <app_main_views_converter:EnumToCultureConverter x:Key="EnumToCultureConverter" />
  </Window.Resources>
  <Window.Title>
    <Binding Path="Resources.String_Feedback_Caption" Source="{x:Static app_main:CultureService.Instance}" Converter="{StaticResource TitleConverter}" />
  </Window.Title>
  <i:Interaction.Triggers>
    <app_core_views:RequestTrigger SourceObject="{Binding CloseRequest}">
      <prism:InvokeCommandAction Command="{Binding CloseCommand, ElementName=root}" />
    </app_core_views:RequestTrigger>
  </i:Interaction.Triggers>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <Grid Grid.Row="0">
      <Grid Margin="{StaticResource AllMargin}">
        <Grid.Style>
          <Style TargetType="Grid">
            <Style.Triggers>
              <DataTrigger Binding="{Binding SendStatus.State}" Value="Running">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding SendStatus.State}" Value="End">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding SendStatus.State}" Value="Error">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
            </Style.Triggers>
            <Setter Property="IsEnabled" Value="True" />
          </Style>

        </Grid.Style>

        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
          <TextBlock Text="{Binding Resources.String_Feedback_Description, Source={x:Static app_main:CultureService.Instance}}"  />
          <TextBlock Text="{Binding Resources.String_Feedback_Warning, Source={x:Static app_main:CultureService.Instance}}"  />
          <TextBlock Text="{Binding Resources.String_Feedback_SourceAddress, Source={x:Static app_main:CultureService.Instance}}" />
          <TextBlock>
            <Hyperlink Command="{Binding ShowSourceUriCommand}">
              <TextBlock Text="{Binding Resources.String_Feedback_SourceOpen, Source={x:Static app_main:CultureService.Instance}}" />
            </Hyperlink>
          </TextBlock>
          <Separator Style="{StaticResource Vertical-Padding}" />
        </StackPanel>

        <Label Grid.Row="1" Grid.Column="0" Target="{Binding ElementName=inputSubject}" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_Feedback_Subject_A, Source={x:Static app_main:CultureService.Instance}}" />
        <TextBox x:Name="inputSubject" Grid.Row="1" Grid.Column="1" Text="{Binding Subject, UpdateSourceTrigger=PropertyChanged}" />

        <Label Grid.Row="2" Grid.Column="0" Target="{Binding ElementName=inputKindSet}" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_Feedback_Kind_A, Source={x:Static app_main:CultureService.Instance}}" />
        <Grid Grid.Row="2" Grid.Column="1" >
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <ComboBox x:Name="inputKindSet" Grid.Column="0" SelectedItem="{Binding SelectedFeedbackKind}" ItemsSource="{Binding FeedbackKindItems}">
            <ComboBox.ItemTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding Converter={StaticResource EnumToCultureConverter}}" />
              </DataTemplate>
            </ComboBox.ItemTemplate>
          </ComboBox>
          <Button Grid.Column="1"  Content="{Binding Resources.String_Feedback_KindSet_A, Source={x:Static app_main:CultureService.Instance}}" Command="{Binding SetTemplateCommand}" />
          <TextBlock Grid.Column="2" VerticalAlignment="Center" Text="{Binding Resources.String_Feedback_KindSetWarning, Source={x:Static app_main:CultureService.Instance}}" />
        </Grid>

        <Label Grid.Row="3" Grid.Column="0" Target="{Binding ElementName=inputContent}" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_Feedback_Comment_A, Source={x:Static app_main:CultureService.Instance}}" />
        <Grid Grid.Row="3" Grid.Column="1" >
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>

          <TextBlock Grid.Row="0" Text="{Binding Resources.String_Feedback_CommentContent, Source={x:Static app_main:CultureService.Instance}}" ToolTip="{Binding Resources.String_Feedback_Comment_Format, Source={x:Static app_main:CultureService.Instance}}" />

          <sharpdevelop_avalonedit:TextEditor
            x:Name="inputContent"
            Grid.Row="1"
            ShowLineNumbers="True"
            Document="{Binding ContentDocument}"
            SyntaxHighlighting="MarkDown"
          >
            <sharpdevelop_avalonedit:TextEditor.Options>
              <sharpdevelop_avalonedit:TextEditorOptions
                ShowSpaces="True"
                ShowTabs="True"
                ShowEndOfLine="True"
              />
            </sharpdevelop_avalonedit:TextEditor.Options>
          </sharpdevelop_avalonedit:TextEditor>
        </Grid>


      </Grid>

      <Border Background="#80cccccc" Padding="16">
        <Border.Style>
          <Style TargetType="Border">
            <Style.Triggers>
              <DataTrigger Binding="{Binding SendStatus.State}" Value="Running">
                <Setter Property="Visibility" Value="Visible" />
              </DataTrigger>
              <DataTrigger Binding="{Binding SendStatus.State}" Value="End">
                <Setter Property="Visibility" Value="Visible" />
              </DataTrigger>
              <DataTrigger Binding="{Binding SendStatus.State}" Value="Error">
                <Setter Property="Visibility" Value="Visible" />
              </DataTrigger>
            </Style.Triggers>
            <Setter Property="Visibility" Value="Collapsed" />
          </Style>
        </Border.Style>
        <StackPanel VerticalAlignment="Center">
          <!--#region 実行中 -->
          <ContentControl IsTabStop="False" Background="Lime">
            <ContentControl.Style>
              <Style TargetType="ContentControl">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding SendStatus.State}" Value="Running">
                    <Setter Property="Visibility" Value="Visible" />
                  </DataTrigger>
                </Style.Triggers>
                <Setter Property="Visibility" Value="Collapsed" />
              </Style>
            </ContentControl.Style>
            <ProgressBar Height="16" IsIndeterminate="True" />
          </ContentControl>
          <!--#endregion-->

          <!--#region 失敗 -->
          <ContentControl IsTabStop="False">
            <ContentControl.Style>
              <Style TargetType="ContentControl">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding SendStatus.State}" Value="Error">
                    <Setter Property="Visibility" Value="Visible" />
                  </DataTrigger>
                </Style.Triggers>
                <Setter Property="Visibility" Value="Collapsed" />
              </Style>
            </ContentControl.Style>
            <StackPanel>
              <TextBlock TextAlignment="Center" Text="{Binding ErrorMessage}" />
              <TextBlock TextAlignment="Center">
                <Hyperlink Command="{Binding CorrectCommand}">
                  <TextBlock Text="{Binding Resources.String_Feedback_Correct, Source={x:Static app_main:CultureService.Instance}}" />
                </Hyperlink>
              </TextBlock>
            </StackPanel>
          </ContentControl>
          <!--#endregion-->

          <!--#region 成功 -->
          <ContentControl IsTabStop="False">
            <ContentControl.Style>
              <Style TargetType="ContentControl">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding SendStatus.State}" Value="End">
                    <Setter Property="Visibility" Value="Visible" />
                  </DataTrigger>
                </Style.Triggers>
                <Setter Property="Visibility" Value="Collapsed" />
              </Style>
            </ContentControl.Style>
            <StackPanel>
              <TextBlock TextAlignment="Center" Text="{Binding Resources.String_Common_Sent, Source={x:Static app_main:CultureService.Instance}}" />
              <TextBlock TextAlignment="Center">
                <Hyperlink Command="{Binding CloseCommand, ElementName=root}">
                  <TextBlock Text="{Binding Resources.String_Common_Close, Source={x:Static app_main:CultureService.Instance}}" />
                </Hyperlink>
              </TextBlock>
            </StackPanel>
          </ContentControl>
          <!--#endregion-->

        </StackPanel>
      </Border>
    </Grid>

    <UniformGrid Grid.Row="1" Style="{StaticResource DialogCommand}">
      <Button Content="{Binding Resources.String_Common_Send_A, Source={x:Static app_main:CultureService.Instance}}" Command="{Binding SendCommand}">
        <Button.Style>
          <Style TargetType="Button" BasedOn="{StaticResource DialogCommandButton}">
            <Style.Triggers>
              <DataTrigger Binding="{Binding SendStatus.State}" Value="Running">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding SendStatus.State}" Value="End">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding SendStatus.State}" Value="Error">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
            </Style.Triggers>
            <Setter Property="IsEnabled" Value="True" />
          </Style>
        </Button.Style>
      </Button>
      <Button Content="{Binding Resources.String_Common_Close_A, Source={x:Static app_main:CultureService.Instance}}" Command="{Binding CloseCommand, ElementName=root}">
        <Button.Style>
          <Style TargetType="Button" BasedOn="{StaticResource DialogCommandButton}">
            <Style.Triggers>
              <DataTrigger Binding="{Binding SendStatus.State}" Value="Running">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
            </Style.Triggers>
            <Setter Property="IsEnabled" Value="True" />
          </Style>
        </Button.Style>
      </Button>
    </UniformGrid>
  </Grid>
</Window>
