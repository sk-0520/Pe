<UserControl
  x:Name="root"
  x:Class="ContentTypeTextNet.Pe.Main.Views.LauncherItemCustomize.LauncherItemCustomizeControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:sys="http://schemas.microsoft.com/winfx/2009/xaml"

  xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:prism="http://prismlibrary.com/"

  xmlns:sharpdevelop_avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"

  xmlns:app_bridge_model_data="clr-namespace:ContentTypeTextNet.Pe.Bridge.Models.Data;assembly=Pe.Bridge"
  xmlns:app_views_converter="clr-namespace:ContentTypeTextNet.Pe.Core.Views.Converter;assembly=Pe.Core"
  xmlns:app_views_attached="clr-namespace:ContentTypeTextNet.Pe.Core.Views.Attached;assembly=Pe.Core"
  xmlns:app_views_selector="clr-namespace:ContentTypeTextNet.Pe.Core.Views.Selector;assembly=Pe.Core"
  xmlns:app_views="clr-namespace:ContentTypeTextNet.Pe.Core.Views;assembly=Pe.Core"
  xmlns:app_main="clr-namespace:ContentTypeTextNet.Pe.Main"
  xmlns:app_main_views="clr-namespace:ContentTypeTextNet.Pe.Main.Views"
  xmlns:app_main_views_converter="clr-namespace:ContentTypeTextNet.Pe.Main.Views.Converter"
  xmlns:app_main_viewmodels_launcher_item_customize="clr-namespace:ContentTypeTextNet.Pe.Main.ViewModels.LauncherItemCustomize"
  xmlns:app_main_views_launcher_item_customize="clr-namespace:ContentTypeTextNet.Pe.Main.Views.LauncherItemCustomize"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignHeight="450" d:DesignWidth="800"
>
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Pe.Core;component/Views/ColorPickerDictionary.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <app_views_converter:EscapeAccessKeyConverter x:Key="EscapeAccessKeyConverter" />
      <app_views_converter:DoubleToParameterPercentConverter x:Key="DoubleToParameterPercentConverter" />
      <app_views_converter:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
      <app_views_converter:LogicalIsNotNullConverter x:Key="LogicalIsNotNullConverter" />
      <app_views_converter:IconBoxToWidthConverter x:Key="IconBoxToWidthConverter" />
      <app_views_converter:IconBoxToHeightConverter x:Key="IconBoxToHeightConverter" />

      <app_main_views_converter:EnumToCultureConverter x:Key="EnumToCultureConverter" />
    </ResourceDictionary>
  </UserControl.Resources>


  <ItemsControl Grid.IsSharedSizeScope="True" IsTabStop="False" ItemsSource="{Binding Editor.CustomizeItems, RelativeSource={RelativeSource AncestorType=UserControl}}">
    <ItemsControl.Resources>
      <Style x:Key="LabelDefinition" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="SharedSizeGroup" Value="CustomizeLauncherItemHeader" />
      </Style>
      <Style x:Key="ContentDefinition" TargetType="ColumnDefinition">
        <Setter Property="Width" Value="*" />
      </Style>

      <!--<sys:Int32 x:Key="LabelColumn">0</sys:Int32>
      <sys:Int32 x:Key="ContentColumn">1</sys:Int32>
      <sys:Double x:Key="MultiLine-Height">50</sys:Double>-->

      <!--#region 共通 -->
      <DataTemplate DataType="{x:Type app_main_viewmodels_launcher_item_customize:LauncherItemCustomizeCommonViewModel}">
        <GroupBox Style="{StaticResource HeaderGroupBox}" Header="{Binding Resources.String_LauncherItemCustomizeControl_Common_Header, Source={x:Static app_main:CultureService.Instance}}">
          <StackPanel>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_LauncherItemCustomizeControl_Common_Id, Source={x:Static app_main:CultureService.Instance}, Converter={StaticResource EscapeAccessKeyConverter}}" />
              <TextBox Grid.Column="1" Style="{StaticResource Horizontal-TextBox}" Text="{Binding LauncherItemId, Mode=OneWay}" IsReadOnly="True" />
            </Grid>

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_LauncherItemCustomizeControl_Common_Kind, Source={x:Static app_main:CultureService.Instance}, Converter={StaticResource EscapeAccessKeyConverter}}" />
              <TextBox Grid.Column="1" Style="{StaticResource Horizontal-TextBox}" Text="{Binding Kind, Mode=OneWay, Converter={StaticResource EnumToCultureConverter}}" IsReadOnly="True" />
            </Grid>

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Target="{Binding ElementName=inputName}" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_LauncherItemCustomizeControl_Common_Name_A, Source={x:Static app_main:CultureService.Instance}}" />
              <TextBox x:Name="inputName" Grid.Column="1" Style="{StaticResource Horizontal-TextBox}" Text="{Binding Name}" />
            </Grid>

            <Grid IsEnabled="{Binding IsEnabledIconSetting}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Target="{Binding ElementName=commandSelectIconFile}" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_LauncherItemCustomizeControl_Common_Icon_A, Source={x:Static app_main:CultureService.Instance}}" />
              <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBox Style="{StaticResource Horizontal-TextBox}" Grid.Column="0" IsReadOnly="True" Text="{Binding IconPath, Mode=OneWay}" />
                <Button Grid.Column="1" Command="{Binding IconClearSelectCommand}" ToolTip="{Binding Resources.String_Common_Clear, Source={x:Static app_main:CultureService.Instance}}">
                  <Control Style="{StaticResource Image-Small}" Template="{StaticResource App-Image-Clear}" />
                </Button>
                <Button x:Name="commandSelectIconFile" Grid.Column="2" Command="{Binding IconFileSelectCommand}" ToolTip="{Binding Resources.String_LauncherItemCustomizeControl_Common_SelectIcon, Source={x:Static app_main:CultureService.Instance}}">
                  <Control Style="{StaticResource Image-Small}" Template="{StaticResource App-Image-Icon}" />
                </Button>
                <Button Grid.Column="3" Command="{Binding IconImageSelectCommand}" ToolTip="{Binding Resources.String_LauncherItemCustomizeControl_Common_SelectImage, Source={x:Static app_main:CultureService.Instance}}">
                  <Control Style="{StaticResource Image-Small}" Template="{StaticResource App-Image-Image}" />
                </Button>
              </Grid>
            </Grid>

            <Grid IsEnabled="{Binding IsEnabledBadgeSetting}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_LauncherItemCustomizeControl_Common_Badge_A, Source={x:Static app_main:CultureService.Instance}, Converter={StaticResource EscapeAccessKeyConverter}}" />
              <WrapPanel Grid.Column="1" VerticalAlignment="Center">
                <CheckBox Style="{StaticResource Horizontal-CheckBox}" IsChecked="{Binding BadgeIsVisible}" Content="{Binding Resources.String_LauncherItemCustomizeControl_Common_Badge_IsVisible_A, Source={x:Static app_main:CultureService.Instance}}" />

                <app_views:ColorCanvas Width="80" HasAlpha="True" Style="{StaticResource ColorPicker}" SelectedColor="{Binding BadgeBackground, Mode=TwoWay}" />

                <ComboBox Width="120" ItemsSource="{Binding BadgeShapeCollection}" SelectedItem="{Binding BadgeShape}">
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <TextBlock Text="{Binding Converter={StaticResource EnumToCultureConverter}}" />
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
                
                <TextBox Width="80" Style="{StaticResource Horizontal-TextBox}" Text="{Binding BadgeDisplay, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Binding Resources.String_LauncherItemCustomizeControl_Common_Badge_Display_Remark, Source={x:Static app_main:CultureService.Instance}}" />

                <ContentControl Content="{Binding Badge}">
                  <ContentControl.Style>
                    <Style TargetType="ContentControl">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Badge, Converter={StaticResource LogicalIsNotNullConverter}}" Value="True">
                          <Setter Property="ContentTemplate">
                            <Setter.Value>
                              <DataTemplate>
                                <app_main_views:BadgeControl Badge="{Binding}" />
                              </DataTemplate>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                      </Style.Triggers>
                      <Setter Property="Visibility" Value="Collapsed" />
                    </Style>
                  </ContentControl.Style>
                </ContentControl>
              </WrapPanel>
            </Grid>

            <Grid IsEnabled="{Binding IsEnabledOtherSetting}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_LauncherItemCustomizeControl_Common_Others, Source={x:Static app_main:CultureService.Instance}, Converter={StaticResource EscapeAccessKeyConverter}}" />
              <StackPanel Grid.Column="1" VerticalAlignment="Center">
                <CheckBox IsChecked="{Binding IsEnabledCommandLauncher}" Content="{Binding Resources.String_LauncherItemCustomizeControl_Common_Others_UseCommandLauncher_A, Source={x:Static app_main:CultureService.Instance}}" />
              </StackPanel>
            </Grid>

          </StackPanel>

        </GroupBox>
      </DataTemplate>
      <!--#endregion-->

      <!--#region ファイル -->
      <DataTemplate DataType="{x:Type app_main_viewmodels_launcher_item_customize:LauncherItemCustomizeFileViewModel}">
        <GroupBox x:Name="item" Style="{StaticResource HeaderGroupBox}" Header="{Binding Resources.String_LauncherItemCustomizeControl_File_Header, Source={x:Static app_main:CultureService.Instance}}">
          <StackPanel>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Target="{Binding ElementName=inputPath}" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_LauncherItemCustomizeControl_File_Path_A, Source={x:Static app_main:CultureService.Instance}}" />
              <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ComboBox x:Name="inputPath" Grid.Column="0" ScrollViewer.CanContentScroll="True" IsEditable="True" Style="{StaticResource Horizontal-ComboBox}" Text="{Binding Path}" ItemsSource="{Binding PathItems}" IsDropDownOpen="{Binding IsDropDownPathItems}" >
                  <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                      <VirtualizingStackPanel
                        VirtualizingStackPanel.IsVirtualizing="True"
                        VirtualizingStackPanel.VirtualizationMode="Recycling"
                      />
                    </ItemsPanelTemplate>
                  </ComboBox.ItemsPanel>
                  <ComboBox.ItemTemplateSelector>
                    <app_views_selector:ComboBoxItemTemplateSelector>
                      <app_views_selector:ComboBoxItemTemplateSelector.SelectedTemplate>
                        <DataTemplate>
                          <TextBlock Text="{Binding Name, Mode=OneTime}"/>
                        </DataTemplate>
                      </app_views_selector:ComboBoxItemTemplateSelector.SelectedTemplate>

                      <app_views_selector:ComboBoxItemTemplateSelector.DropDownTemplate>
                        <DataTemplate>
                          <TextBlock>
                            <Hyperlink Command="{Binding DataContext.SetPathToFullPathCommand, ElementName=item, Mode=OneTime}" CommandParameter="{Binding}">
                              <Run Text="{Binding DirectoryPath, Mode=OneTime}"  />
                            </Hyperlink>
                            <Run Text="{Binding FileName, Mode=OneTime}"/>
                          </TextBlock>
                        </DataTemplate>
                      </app_views_selector:ComboBoxItemTemplateSelector.DropDownTemplate>
                    </app_views_selector:ComboBoxItemTemplateSelector>
                  </ComboBox.ItemTemplateSelector>
                </ComboBox>
                <Button Grid.Column="1" Command="{Binding LauncherFileSelectCommand}" ToolTip="{Binding Resources.String_Common_SelectFile, Source={x:Static app_main:CultureService.Instance}}">
                  <Control Style="{StaticResource Image-Small}" Template="{StaticResource App-Image-File}" />
                </Button>
                <Button Grid.Column="2" Command="{Binding LauncherDirectorySelectCommand}" ToolTip="{Binding Resources.String_Common_SelectDirectory, Source={x:Static app_main:CultureService.Instance}}">
                  <Control Style="{StaticResource Image-Small}" Template="{StaticResource App-Image-Directory}" />
                </Button>
              </Grid>
            </Grid>

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Target="{Binding ElementName=inputOption}" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_LauncherItemCustomizeControl_File_Options_A, Source={x:Static app_main:CultureService.Instance}}" />
              <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBox x:Name="inputOption" Grid.Column="0" Style="{StaticResource Horizontal-TextBox}" Text="{Binding Option}" />
                <Button Grid.Column="1" Command="{Binding OptionClearCommand}" ToolTip="{Binding Resources.String_Common_Clear, Source={x:Static app_main:CultureService.Instance}}">
                  <Control Style="{StaticResource Image-Small}" Template="{StaticResource App-Image-Clear}" />
                </Button>
                <Button Grid.Column="2" Command="{Binding OptionFileSelectCommand}" ToolTip="{Binding Resources.String_Common_SelectFile, Source={x:Static app_main:CultureService.Instance}}">
                  <Control Style="{StaticResource Image-Small}" Template="{StaticResource App-Image-File}" />
                </Button>
                <Button Grid.Column="3" Command="{Binding OptionDirectorySelectCommand}" ToolTip="{Binding Resources.String_Common_SelectDirectory, Source={x:Static app_main:CultureService.Instance}}">
                  <Control Style="{StaticResource Image-Small}" Template="{StaticResource App-Image-Directory}" />
                </Button>
              </Grid>

            </Grid>

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_LauncherItemCustomizeControl_File_ShowMode_A, Source={x:Static app_main:CultureService.Instance}}" />
              <WrapPanel Grid.Column="1" VerticalAlignment="Center">
                <RadioButton Style="{StaticResource Horizontal-RadioButton}" Content="{Binding Source={x:Static app_bridge_model_data:ShowMode.Normal}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding ShowMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_model_data:ShowMode.Normal}}" />
                <RadioButton Style="{StaticResource Horizontal-RadioButton}" Content="{Binding Source={x:Static app_bridge_model_data:ShowMode.Minimized}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding ShowMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_model_data:ShowMode.Minimized}}" />
                <RadioButton Style="{StaticResource Horizontal-RadioButton}" Content="{Binding Source={x:Static app_bridge_model_data:ShowMode.Maximized}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding ShowMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_model_data:ShowMode.Maximized}}" />
                <Separator Style="{StaticResource Normal-Indent}" />
                <RadioButton Style="{StaticResource Horizontal-RadioButton}" Content="{Binding Source={x:Static app_bridge_model_data:ShowMode.Hidden}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding ShowMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_model_data:ShowMode.Hidden}}" />
              </WrapPanel>
            </Grid>

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Target="{Binding ElementName=inputWorkingDirectoryPath}" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_LauncherItemCustomizeControl_File_WorkDirectory_A, Source={x:Static app_main:CultureService.Instance}}" />
              <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBox x:Name="inputWorkingDirectoryPath" Grid.Column="0" Style="{StaticResource Horizontal-TextBox}" Text="{Binding WorkingDirectoryPath}" />
                <Button Grid.Column="1" Command="{Binding WorkingDirectoryClearCommand}" ToolTip="{Binding Resources.String_Common_Clear, Source={x:Static app_main:CultureService.Instance}}">
                  <Control Style="{StaticResource Image-Small}" Template="{StaticResource App-Image-Clear}" />
                </Button>
                <Button Grid.Column="2" Command="{Binding WorkingDirectorySelectCommand}" ToolTip="{Binding Resources.String_Common_SelectDirectory, Source={x:Static app_main:CultureService.Instance}}">
                  <Control Style="{StaticResource Image-Small}" Template="{StaticResource App-Image-Directory}" />
                </Button>
              </Grid>

            </Grid>

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" VerticalAlignment="Top" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_LauncherItemCustomizeControl_File_Others, Source={x:Static app_main:CultureService.Instance}, Converter={StaticResource EscapeAccessKeyConverter}}" />
              <WrapPanel Grid.Column="1" VerticalAlignment="Center">
                <CheckBox Style="{StaticResource Horizontal-CheckBox}" IsChecked="{Binding IsEnabledStandardInputOutput}" Content="{Binding Resources.String_LauncherItemCustomizeControl_File_Command_IsEnable_StandardInputOutpu, Source={x:Static app_main:CultureService.Instance}}" />
                <CheckBox Style="{StaticResource Horizontal-CheckBox}" IsChecked="{Binding RunAdministrator}" Content="{Binding Resources.String_LauncherItemCustomizeControl_File_Command_RunAdministrator, Source={x:Static app_main:CultureService.Instance}}" />
                <CheckBox Style="{StaticResource Horizontal-CheckBox}" IsChecked="{Binding IsEnabledCustomEnvironmentVariable}" Content="{Binding Resources.String_LauncherItemCustomizeControl_File_Command_IsEnabled_CustomEnvironmentVariable, Source={x:Static app_main:CultureService.Instance}}" />
              </WrapPanel>
            </Grid>

          </StackPanel>
        </GroupBox>
      </DataTemplate>
      <!--#endregion-->

      <!--#region ストアアプリ -->
      <DataTemplate DataType="{x:Type app_main_viewmodels_launcher_item_customize:LauncherItemCustomizeStoreAppViewModel}">
        <GroupBox x:Name="item" Style="{StaticResource HeaderGroupBox}" Header="{Binding Resources.String_LauncherItemCustomizeControl_StoreApp_Header, Source={x:Static app_main:CultureService.Instance}}">
          <StackPanel>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Target="{Binding ElementName=inputProtocolAlias}" Content="{Binding Resources.String_LauncherItemCustomizeControl_StoreApp_ProtocolAlias_A, Source={x:Static app_main:CultureService.Instance}}" />
              <TextBox x:Name="inputProtocolAlias" Grid.Column="1" Text="{Binding ProtocolAlias}" />

            </Grid>

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Target="{Binding ElementName=inputOption}" Content="{Binding Resources.String_LauncherItemCustomizeControl_StoreApp_Options_A, Source={x:Static app_main:CultureService.Instance}}" />
              <TextBox x:Name="inputOption" Grid.Column="1" Text="{Binding Option}" />
            </Grid>


          </StackPanel>
        </GroupBox>
      </DataTemplate>
      <!--#endregion -->

      <!--#region 組み込み -->

      <DataTemplate DataType="{x:Type app_main_viewmodels_launcher_item_customize:LauncherItemCustomizeSeparatorViewModel}">
        <GroupBox x:Name="item" Style="{StaticResource HeaderGroupBox}" Header="{Binding Resources.String_LauncherItemCustomizeControl_File_Header, Source={x:Static app_main:CultureService.Instance}}">
          <StackPanel>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Target="{Binding ElementName=selectSeparator}" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_LauncherItemCustomizeControl_Separator_Kind_A, Source={x:Static app_main:CultureService.Instance}}" />
              <ComboBox
                x:Name="selectSeparator"
                Grid.Column="1"
                Style="{StaticResource Horizontal-ComboBox}"
                ItemsSource="{Binding KindItems}"
                SelectedItem="{Binding SelectedKind}"
              >
                <ComboBox.ItemTemplate>
                  <DataTemplate>
                    <TextBlock Text="{Binding Converter={StaticResource EnumToCultureConverter}}" />
                  </DataTemplate>
                </ComboBox.ItemTemplate>
              </ComboBox>
            </Grid>

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                <ColumnDefinition Style="{StaticResource ContentDefinition}" />
              </Grid.ColumnDefinitions>

              <Label Grid.Column="0" Target="{Binding ElementName=inputWidth}" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_LauncherItemCustomizeControl_Separator_Width_A, Source={x:Static app_main:CultureService.Instance}}" />
              <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="100" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <app_views:NumericUpDown
                  x:Name="inputWidth"
                  Grid.Column="0"
                  Margin="{StaticResource HorizontalContrlMargin}"
                  Value="{Binding Width}"
                  Minimum="1"
                  Maximum="100"
                />
                <Slider
                  Grid.Column="1"
                  Margin="{StaticResource HorizontalContrlMargin}"
                  Minimum="{Binding Minimum, ElementName=inputWidth}"
                  Maximum="{Binding Maximum, ElementName=inputWidth}"
                  Value="{Binding Width}"
                  VerticalAlignment="Center"
                />
              </Grid>
            </Grid>

          </StackPanel>
        </GroupBox>
      </DataTemplate>

      <!--#endregion -->

      <!--#region アドイン -->
      <DataTemplate DataType="{x:Type app_main_viewmodels_launcher_item_customize:LauncherItemCustomizeAddonViewModel}">
        <GroupBox x:Name="item" Style="{StaticResource HeaderGroupBox}" Header="{Binding LauncherItemHeader, Converter={StaticResource EscapeAccessKeyConverter}}">
          <ContentControl>
            <ContentControl.Style>
              <Style TargetType="ContentControl" BasedOn="{StaticResource {x:Type ContentControl}}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding LauncherItemSupportedPreferences}" Value="True">
                    <Setter Property="Content" Value="{Binding PreferencesControl}" />
                  </DataTrigger>
                </Style.Triggers>
                <Setter Property="Content">
                  <Setter.Value>
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                        <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                      </Grid.ColumnDefinitions>

                      <Grid Grid.Column="1">
                        <TextBlock Text="{Binding Resources.String_LauncherItemCustomizeControl_Plugin_NotSupported, Source={x:Static app_main:CultureService.Instance}}" />
                      </Grid>
                    </Grid>
                  </Setter.Value>
                </Setter>
              </Style>
            </ContentControl.Style>
          </ContentControl>
        </GroupBox>
      </DataTemplate>
      <!--#endregion -->

      <!--#region セパレータ(いるか？) -->
      <!--#endregion -->

      <!--#region 環境変数 -->
      <DataTemplate DataType="{x:Type app_main_viewmodels_launcher_item_customize:LauncherItemCustomizeEnvironmentVariableViewModel}">
        <GroupBox Style="{StaticResource HeaderGroupBox}" Header="{Binding Resources.String_LauncherItemCustomizeControl_EnvironmentVariable_Header, Source={x:Static app_main:CultureService.Instance}}" >
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Style="{StaticResource LabelDefinition}" />
              <ColumnDefinition Style="{StaticResource ContentDefinition}" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1">
              <app_main_views_launcher_item_customize:EnvironmentVariableEditor
                MergeTextDocument="{Binding MergeTextDocument}"
                MergeErrorItemsSource="{Binding MergeErrors}"
                RemoveTextDocument="{Binding RemoveTextDocument}"
                RemoveErrorItemsSource="{Binding RemoveErrors}"
              />
            </Grid>
          </Grid>
        </GroupBox>
      </DataTemplate>
      <!--#endregion -->

      <!--#region 再試行 -->
      <DataTemplate DataType="{x:Type app_main_viewmodels_launcher_item_customize:LauncherItemCustomizeRedoViewModel}">
        <GroupBox Style="{StaticResource HeaderGroupBox}" Header="{Binding Resources.String_LauncherItemCustomizeControl_RedoEditor_Header, Source={x:Static app_main:CultureService.Instance}}" >
          <app_main_views_launcher_item_customize:RedoEditor

            RedoMode="{Binding RedoMode, Mode=TwoWay}"

            WaitTimeSeconds="{Binding WaitTimeSeconds, Mode=TwoWay}"
            MinimumWaitTimeSeconds="{Binding MinimumWaitTimeSeconds, Mode=OneWay}"
            MaximumWaitTimeSeconds="{Binding MaximumWaitTimeSeconds, Mode=OneWay}"

            RetryCount="{Binding RetryCount, Mode=TwoWay}"
            MinimumRetryCount="{Binding MinimumRetryCount, Mode=OneWay}"
            MaximumRetryCount="{Binding MaximumRetryCount, Mode=OneWay}"

            SuccessExitCodes="{Binding SuccessExitCodes, Mode=TwoWay}"
          />
        </GroupBox>
      </DataTemplate>
      <!--#endregion -->

      <!--#region タグ -->
      <DataTemplate DataType="{x:Type app_main_viewmodels_launcher_item_customize:LauncherItemCustomizeTagViewModel}">
        <GroupBox Style="{StaticResource HeaderGroupBox}" Header="{Binding Resources.String_LauncherItemCustomizeControl_Tag_Header, Source={x:Static app_main:CultureService.Instance}}" >
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Style="{StaticResource LabelDefinition}" />
              <ColumnDefinition Style="{StaticResource ContentDefinition}" />
            </Grid.ColumnDefinitions>

            <sharpdevelop_avalonedit:TextEditor x:Name="tagEditor" Style="{StaticResource SettingEditor}" Grid.Row="1" Grid.Column="1" Document="{Binding TagDocument}" Loaded="TagEditor_Loaded" />

          </Grid>
        </GroupBox>
      </DataTemplate>
      <!--#endregion -->

      <!--#region コメント -->
      <DataTemplate DataType="{x:Type app_main_viewmodels_launcher_item_customize:LauncherItemCustomizeCommentViewModel}">
        <GroupBox Style="{StaticResource HeaderGroupBox}" Header="{Binding Resources.String_LauncherItemCustomizeControl_Comment_Header, Source={x:Static app_main:CultureService.Instance}}" >
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Style="{StaticResource LabelDefinition}" />
              <ColumnDefinition Style="{StaticResource ContentDefinition}" />
            </Grid.ColumnDefinitions>

            <sharpdevelop_avalonedit:TextEditor Grid.Row="1" Grid.Column="1" Style="{StaticResource SettingEditor}" Document="{Binding CommentDocument}" />

          </Grid>
        </GroupBox>
      </DataTemplate>
      <!--#endregion -->


    </ItemsControl.Resources>
    <ItemsControl.ItemsPanel>
      <ItemsPanelTemplate>
        <StackPanel>
          <behaviors:Interaction.Triggers>
            <app_views:RequestTrigger SourceObject="{Binding Editor.IconSelectRequest, RelativeSource={RelativeSource AncestorType=UserControl}}">
              <prism:InvokeCommandAction Command="{Binding IconSelectCommand ,ElementName=root}" />
            </app_views:RequestTrigger>
            <app_views:RequestTrigger SourceObject="{Binding Editor.ImageSelectRequest, RelativeSource={RelativeSource AncestorType=UserControl}}">
              <prism:InvokeCommandAction Command="{Binding FileSelectCommand ,ElementName=root}" />
            </app_views:RequestTrigger>
            <app_views:RequestTrigger SourceObject="{Binding Editor.FileSelectRequest, RelativeSource={RelativeSource AncestorType=UserControl}}">
              <prism:InvokeCommandAction Command="{Binding FileSelectCommand ,ElementName=root}" />
            </app_views:RequestTrigger>
          </behaviors:Interaction.Triggers>
        </StackPanel>
      </ItemsPanelTemplate>
    </ItemsControl.ItemsPanel>
  </ItemsControl>

</UserControl>
