<Window
  x:Name="root"
  x:Class="ContentTypeTextNet.Pe.Main.Views.Command.CommandWindow"

  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:app_core_views_converter="clr-namespace:ContentTypeTextNet.Pe.Core.Views.Converter;assembly=Pe.Core"
  xmlns:app_main_viewmodels_iconviewer="clr-namespace:ContentTypeTextNet.Pe.Main.ViewModels.IconViewer"
  xmlns:app_main_views="clr-namespace:ContentTypeTextNet.Pe.Main.Views"

  Title="CommandWindow"
  Height="450"
  Width="800"

  AllowsTransparency="True"
  WindowStyle="None"
  Background="Transparent"
  SizeToContent="Height"
  MinWidth="100"
  MaxWidth="400"
  Topmost="True"

  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d"
>
  <Window.Resources>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <app_core_views_converter:IconBoxToWidthConverter x:Key="IconBoxToWidthConverter" />
    <app_core_views_converter:IconBoxToHeightConverter x:Key="IconBoxToHeightConverter" />

    <DataTemplate DataType="{x:Type app_main_viewmodels_iconviewer:IconViewerViewModel}">
      <app_main_views:ImageViewerControl IconViewer="{Binding }" />
    </DataTemplate>
  </Window.Resources>
  <Window.Style>
    <Style TargetType="Window">
      <Setter Property="WindowChrome.WindowChrome">
        <Setter.Value>
          <WindowChrome
            CaptionHeight="0"
            ResizeBorderThickness="{Binding ViewResizeThickness}"
          />
        </Setter.Value>
      </Setter>
    </Style>
  </Window.Style>

  <Border BorderThickness="{Binding ViewBorderThickness}">
    <Border.Style>
      <Style TargetType="Border">
        <Setter Property="BorderBrush" Value="{Binding ViewActiveBorderBrush}" />
        <Setter Property="Background" Value="{Binding ViewActiveBackgroundBrush}" />
      </Style>
    </Border.Style>

    <Grid VerticalAlignment="Center">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>

      <Border x:Name="grip" Grid.Column="0" Cursor="SizeAll" Width="{Binding GripWidth}">
        <Border.Style>
          <Style TargetType="Border">
            <Setter Property="Background" Value="{Binding GripActiveBrush}" />
          </Style>
        </Border.Style>
      </Border>

      <!-- アイコン描画領域 跡地 -->
      <Grid Grid.Column="1">
        <!-- 別にいらんなぁ、と。 -->
        <ContentControl
          Width="{Binding IconBox, Converter={StaticResource IconBoxToWidthConverter}}"
          Height="{Binding IconBox, Converter={StaticResource IconBoxToHeightConverter}}"
          Margin="{Binding SelectedIconMargin}"
          Content="{Binding SelectedItem.Icon}"
        />
      </Grid>

      <Grid Grid.Column="2">
        <Border BorderThickness="{Binding InputBorderThickness}" >
          <Border.Style>
            <Style TargetType="Border">
              <Setter Property="BorderBrush" Value="{Binding InputEmptyBorderBrush}" />
            </Style>
          </Border.Style>
          <TextBox x:Name="inputCommand" BorderThickness="0">
            <TextBox.Style>
              <Style TargetType="TextBox">
                <Setter Property="Background" Value="{Binding InputEmptyBackground}" />
                <Setter Property="Foreground" Value="{Binding InputEmptyForeground}" />
              </Style>
            </TextBox.Style>
          </TextBox>
        </Border>
        <Popup
          x:Name="popupItems"
          MaxHeight="300"
          MinWidth="{Binding ActualWidth, ElementName=inputCommand}"
          PlacementTarget="{Binding ElementName=inputCommand}"
          IsOpen="{Binding ElementName=inputCommand, Path=IsFocused,Mode=OneWay}"
        >
          <ListBox x:Name="listItems" SelectedItem="{Binding SelectedItem}" ItemsSource="{Binding CommandItems}">
            <ListBox.ItemTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal">
                  <!--<Image Style="{StaticResource ItemImage}" Source="{Binding Image}" />-->
                  <ContentControl Content="{Binding Icon}" />
                  <TextBlock Text="{Binding Header}" />
                  <TextBlock Text=" " />
                  <TextBlock Text="{Binding Description}" />
                </StackPanel>
              </DataTemplate>
            </ListBox.ItemTemplate>

          </ListBox>
        </Popup>
      </Grid>

      <Button Grid.Column="3" Content="exec"/>

    </Grid>
  </Border>

</Window>
