<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:Taskbar="clr-namespace:Hardcodet.Wpf.TaskbarNotification"


  xmlns:app_core_view_converter="clr-namespace:ContentTypeTextNet.Pe.Core.Views.Converter;assembly=Pe.Core"
  xmlns:app_main="clr-namespace:ContentTypeTextNet.Pe.Main"

  xmlns:app_main_viewmodel_manager="clr-namespace:ContentTypeTextNet.Pe.Main.ViewModels.Manager"
>
  <ContextMenu x:Key="ContextMenu">
    <ContextMenu.Resources>
      <app_core_view_converter:EscapeAccessKeyConverter x:Key="EscapeAccessKeyConverter" />
      <app_core_view_converter:IsNotEmptyCollectionConverter x:Key="IsNotEmptyCollectionConverter" />

      <Style x:Key="INotifyAreaMenuItem" TargetType="MenuItem" >
        <Style.Triggers>
          <DataTrigger Binding="{Binding MenuHeaderHasAccessKey}" Value="False">
            <Setter Property="Header" Value="{Binding MenuHeader, Converter={StaticResource EscapeAccessKeyConverter}}" />
          </DataTrigger>
          <DataTrigger Binding="{Binding MenuHasIcon}" Value="True">
            <Setter Property="Icon" Value="{Binding MenuIcon}" />
            <Setter Property="IsCheckable" Value="False" />
            <Setter Property="IsChecked" Value="False" />
          </DataTrigger>
          <DataTrigger Binding="{Binding MenuHasIcon}" Value="False">
            <Setter Property="IsCheckable" Value="True" />
            <Setter Property="IsChecked" Value="{Binding MenuIsChecked, Mode=OneWay}" />
          </DataTrigger>
          <DataTrigger Binding="{Binding MenuIsChecked}" Value="True">
            <Setter Property="FontWeight" Value="Bold" />
          </DataTrigger>
        </Style.Triggers>
        <Setter Property="Header" Value="{Binding MenuHeader}" />
        <Setter Property="Command" Value="{Binding MenuCommand}" />
        <Setter Property="CommandParameter" Value="{Binding}" />
      </Style>
    </ContextMenu.Resources>

    <MenuItem Header="{Binding Resources.String_AppManager_Menu_Setting, Source={x:Static app_main:CultureService.Current}}" Command="{Binding OpenSettingCommand}">
      <MenuItem.Icon>
        <ContentControl Content="{StaticResource App-Path-Setting}" Style="{StaticResource Path-MenuIcon}" />
      </MenuItem.Icon>
    </MenuItem>
    <Separator />

    <MenuItem Header="{Binding Resources.String_AppManager_Menu_Toolbar, Source={x:Static app_main:CultureService.Current}}" ItemsSource="{Binding LauncherToolbarItems}" ItemContainerStyle="{StaticResource INotifyAreaMenuItem}">
      <MenuItem.Icon>
        <ContentControl Content="{StaticResource App-Path-Toolbar}" Style="{StaticResource Path-MenuIcon}" />
      </MenuItem.Icon>
      <!--<MenuItem.ItemContainerStyle>
        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
          <Style.Triggers>
            <DataTrigger Binding="{Binding IsVisible}" Value="True">
              <Setter Property="FontWeight" Value="Bold" />
              <Setter Property="Effect" Value="{StaticResource Effect-Strong}" />
            </DataTrigger>
          </Style.Triggers>
          <Setter Property="Icon" Value="{Binding ToolbarIcon}" />
          <Setter Property="Header" Value="{Binding DisplayName}" />
          <Setter Property="Command" Value="{Binding SwitchToolbarCommand}" />
          <Setter Property="CommandParameter" Value="{Binding}" />
        </Style>
      </MenuItem.ItemContainerStyle>-->
    </MenuItem>
    <MenuItem Header="{Binding Resources.String_AppManager_Menu_Note, Source={x:Static app_main:CultureService.Current}}" IsSubmenuOpen="{Binding IsOpenNoteMenu, Mode=OneWayToSource}">
      <MenuItem.Resources>
        <Style x:Key="NoteItemsMenu" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
          <Style.Triggers>
            <DataTrigger Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource Mode=Self}}" Value="0">
              <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </MenuItem.Resources>
      <MenuItem.Icon>
        <ContentControl Content="{StaticResource App-Path-Note}" Style="{StaticResource Path-MenuIcon}" />
      </MenuItem.Icon>

      <MenuItem Header="{Binding Resources.String_AppManager_Menu_Note_Create, Source={x:Static app_main:CultureService.Current}}" Command="{Binding CreateNoteCommand}">
        <MenuItem.Icon>
          <ContentControl Content="{StaticResource App-Path-Note-Create}" Style="{StaticResource Path-MenuIcon}" />
        </MenuItem.Icon>
      </MenuItem>
      <Separator />
      <MenuItem Header="{Binding Resources.String_AppManager_Menu_Note_Compact, Source={x:Static app_main:CultureService.Current}}" Command="{Binding CompactAllNotesCommand}" />
      <Separator />
      <MenuItem Header="{Binding Resources.String_AppManager_Menu_Note_Topmost, Source={x:Static app_main:CultureService.Current}}" Command="{Binding MoveZOrderTopAllNotesCommand}">
        <MenuItem.Icon>
          <ContentControl Content="{StaticResource App-Path-Note-Topmost}" Style="{StaticResource Path-MenuIcon}" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{Binding Resources.String_AppManager_Menu_Note_Bottom, Source={x:Static app_main:CultureService.Current}}" Command="{Binding MoveZOrderBottomAllNotesCommand}">
        <MenuItem.Icon>
          <ContentControl Content="{StaticResource App-Path-Note-Bottom}" Style="{StaticResource Path-MenuIcon}" />
        </MenuItem.Icon>
      </MenuItem>
      <Separator />
      <MenuItem Header="{Binding Resources.String_AppManager_Menu_Note_Visible, Source={x:Static app_main:CultureService.Current}}" ItemsSource="{Binding NoteVisibleItems}" ItemContainerStyle="{StaticResource INotifyAreaMenuItem}" Style="{StaticResource NoteItemsMenu}" />
      <MenuItem Header="{Binding Resources.String_AppManager_Menu_Note_Hidden, Source={x:Static app_main:CultureService.Current}}" ItemsSource="{Binding NoteHiddenItems}" ItemContainerStyle="{StaticResource INotifyAreaMenuItem}" Style="{StaticResource NoteItemsMenu}" />
    </MenuItem>

    <MenuItem Header="{Binding Resources.String_AppManager_Menu_Command, Source={x:Static app_main:CultureService.Current}}" Command="{Binding ShowCommandViewCommand}">
      <MenuItem.Icon>
        <ContentControl Content="{StaticResource App-Path-Command}" Style="{StaticResource Path-MenuIcon}" />
      </MenuItem.Icon>
    </MenuItem>

    <Separator />

    <MenuItem Header="{Binding Resources.String_AppManager_Menu_About, Source={x:Static app_main:CultureService.Current}}">
      <MenuItem.Icon>
        <ContentControl Content="{StaticResource App-Path-About}" Style="{StaticResource Path-MenuIcon}" />
      </MenuItem.Icon>
      <MenuItem Header="{Binding Resources.String_AppManager_Menu_About_Help, Source={x:Static app_main:CultureService.Current}}">
        <MenuItem.Icon>
          <ContentControl Content="{StaticResource App-Path-About-Help}" Style="{StaticResource Path-MenuIcon}" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="{Binding Resources.String_AppManager_Menu_About_Version, Source={x:Static app_main:CultureService.Current}}">
      </MenuItem>
    </MenuItem>
    <MenuItem Header="{Binding Resources.String_AppManager_Menu_Exit, Source={x:Static app_main:CultureService.Current}}" Command="{Binding ExitCommand}" />
  </ContextMenu>

  <Taskbar:TaskbarIcon
    x:Key="root"
    Tag="{Binding DataContext,RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"
    ContextMenu="{StaticResource ContextMenu}"
  >
    <Taskbar:TaskbarIcon.Style>
      <Style TargetType="Taskbar:TaskbarIcon">
        <Style.Triggers>
          <DataTrigger Binding="{Binding BuildType}" Value="Debug">
            <Setter Property="IconSource" Value="/Resources/Icon/NotifyIcon/App-debug.ico" />
          </DataTrigger>
          <DataTrigger Binding="{Binding BuildType}" Value="Beta">
            <Setter Property="IconSource" Value="/Resources/Icon/NotifyIcon/App-beta.ico" />
          </DataTrigger>
          <DataTrigger Binding="{Binding BuildType}" Value="Release">
            <Setter Property="IconSource" Value="/Resources/Icon/NotifyIcon/App-release.ico" />
          </DataTrigger>
        </Style.Triggers>
      </Style>
    </Taskbar:TaskbarIcon.Style>
  </Taskbar:TaskbarIcon>

</ResourceDictionary>
