<UserControl
  x:Name="root"
  x:Class="ContentTypeTextNet.Pe.Main.Views.Setting.GeneralsSettingControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:prism="http://prismlibrary.com/"

  xmlns:app_bridge_models_data="clr-namespace:ContentTypeTextNet.Pe.Bridge.Models.Data;assembly=Pe.Bridge"
  xmlns:app_core_views="clr-namespace:ContentTypeTextNet.Pe.Core.Views;assembly=Pe.Core"
  xmlns:app_core_views_converter="clr-namespace:ContentTypeTextNet.Pe.Core.Views.Converter;assembly=Pe.Core"
  xmlns:app_main_models_data="clr-namespace:ContentTypeTextNet.Pe.Main.Models.Data"
  xmlns:app_main_viewmodels_font="clr-namespace:ContentTypeTextNet.Pe.Main.ViewModels.Font"
  xmlns:app_main_viewmodels_setting="clr-namespace:ContentTypeTextNet.Pe.Main.ViewModels.Setting"
  xmlns:app_main_views="clr-namespace:ContentTypeTextNet.Pe.Main.Views"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignWidth="800"
  d:DesignHeight="450"
>
  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <app_core_views_converter:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
  </UserControl.Resources>


  <Grid>
    <ScrollViewer>
      <ItemsControl ItemsSource="{Binding Editor.EditorItems, ElementName=root}">
        <ItemsControl.Resources>

          <DataTemplate DataType="{x:Type app_main_viewmodels_setting:AppExecuteSettingEditorViewModel}">
            <GroupBox Header="{Binding Header}">
              <StackPanel>
                <CheckBox IsChecked="{Binding SendUsageStatistics}" Content="send info" />
                <Label>userid</Label>
                <TextBox IsReadOnly="True" Text="{Binding UserId, Mode=OneWay}" />
                <Button Content="rand" Command="{Binding CreateUserIdFromRandomCommand}" />
                <Button Content="env" Command="{Binding CreateUserIdFromEnvironmentCommand}" />
              </StackPanel>
            </GroupBox>
          </DataTemplate>

          <DataTemplate DataType="{x:Type app_main_viewmodels_setting:AppGeneralSettingEditorViewModel}">
            <GroupBox Header="{Binding Header}">
              <i:Interaction.Triggers>
                <app_core_views:RequestTrigger SourceObject="{Binding UserBackupDirectorySelecteRequest}">
                  <prism:InvokeCommandAction Command="{Binding FileSelectCommand, ElementName=root}" />
                </app_core_views:RequestTrigger>
              </i:Interaction.Triggers>
              <StackPanel>
                <ComboBox ItemsSource="{Binding CultureInfoItems}" SelectedItem="{Binding SelectedCultureInfo}">
                  <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                      <VirtualizingStackPanel ScrollUnit="Item" />
                    </ItemsPanelTemplate>
                  </ComboBox.ItemsPanel>
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <TextBlock>
                        <Run Text="{Binding DisplayName, Mode=OneTime}" />
                        <Run Text=" (" />
                        <Run Text="{Binding Name, Mode=OneTime}" />
                        <Run Text=")" />
                      </TextBlock>
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
                <CheckBox Content="register startup" IsChecked="{Binding IsRegisterStartup}" />
                <CheckBox Content="wait" IsChecked="{Binding DelayStartup}" />
                <app_core_views:NumericUpDown
                  Minimum="{Binding MinimumStartupWaitTimeSeconds}"
                  Maximum="{Binding MaximumStartupWaitTimeSeconds}"
                  Value="{Binding StartupWaitTimeSeconds}"
                />

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Content="user backup" />
                  <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Column="0" Text="{Binding UserBackupDirectoryPath}" />
                    <Button Grid.Column="1" Content="dir" Command="{Binding UserBackupDirectorySelectCommand}" />
                  </Grid>
                </Grid>
              </StackPanel>
            </GroupBox>
          </DataTemplate>

          <DataTemplate DataType="{x:Type app_main_viewmodels_setting:AppUpdateSettingEditorViewModel}">
            <GroupBox Header="{Binding Header}">
              <StackPanel>
                <CheckBox IsChecked="{Binding IsCheckReleaseVersion}" Content="release" />
                <CheckBox IsChecked="{Binding IsCheckRcVersion}" Content="rc" />
              </StackPanel>
            </GroupBox>
          </DataTemplate>

          <DataTemplate DataType="{x:Type app_main_viewmodels_setting:AppCommandSettingEditorViewModel}">
            <GroupBox Header="{Binding Header}">
              <StackPanel>
                <!-- バインドできない問題 -->
                <ContentControl>
                  <ContentControl.Style>
                    <Style TargetType="ContentControl">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsInitialized}" Value="True">
                          <Setter Property="Content">
                            <Setter.Value>
                              <app_main_views:FontSelectControl
                                SelectedFontFamily="{Binding  Font.FontFamily}"
                                IsBold="{Binding Font.IsBold}"
                                IsItalic="{Binding Font.IsItalic}"
                                Size="{Binding Font.Size}"
                                SizeMinimum="{Binding Font.MinimumSize}"
                                SizeMaximum="{Binding Font.MaximumSize}"
                              />
                            </Setter.Value>
                          </Setter>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </ContentControl.Style>
                </ContentControl>

                <Label>width</Label>
                <app_core_views:NumericUpDown
                  Increment="1"
                  Value="{Binding Width}"
                  Minimum="{Binding MinimumWidth}"
                  Maximum="{Binding MaximumWidth}"
                />

                <Label>wait</Label>
                <app_core_views:NumericUpDown
                  Increment="0.5"
                  Value="{Binding HideWaitMilliseconds}"
                  Minimum="{Binding MinimumHideWaitSeconds}"
                  Maximum="{Binding MaximumHideWaitSeconds}"
                />

                <Label>icon</Label>
                <WrapPanel Orientation="Horizontal">
                  <RadioButton Content="small" IsChecked="{Binding IconBox, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:IconBox.Small}}" />
                  <RadioButton Content="normal" IsChecked="{Binding IconBox, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:IconBox.Normal}}" />
                  <RadioButton Content="big" IsChecked="{Binding IconBox, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:IconBox.Big}}" />
                </WrapPanel>

                <CheckBox Content="find tag" IsChecked="{Binding FindTag}" />

              </StackPanel>
            </GroupBox>
          </DataTemplate>

          <DataTemplate DataType="{x:Type app_main_viewmodels_setting:AppNoteSettingEditorViewModel}">
            <GroupBox Header="{Binding Header}">
              <StackPanel>
                <ContentControl>
                  <ContentControl.Style>
                    <Style TargetType="ContentControl">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsInitialized}" Value="True">
                          <Setter Property="Content">
                            <Setter.Value>
                              <app_main_views:FontSelectControl
                                SelectedFontFamily="{Binding  Font.FontFamily}"
                                IsBold="{Binding Font.IsBold}"
                                IsItalic="{Binding Font.IsItalic}"
                                Size="{Binding Font.Size}"
                                SizeMinimum="{Binding Font.MinimumSize}"
                                SizeMaximum="{Binding Font.MaximumSize}"
                              />
                            </Setter.Value>
                          </Setter>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </ContentControl.Style>
                </ContentControl>

                <Label>title</Label>
                <WrapPanel Orientation="Horizontal">
                  <RadioButton Content="timestamp" IsChecked="{Binding TitleKind, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_main_models_data:NoteCreateTitleKind.Timestamp}}" />
                  <RadioButton Content="count" IsChecked="{Binding TitleKind, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_main_models_data:NoteCreateTitleKind.Count}}" />
                </WrapPanel>

                <Label>layout</Label>
                <WrapPanel Orientation="Horizontal">
                  <RadioButton Content="absolute" IsChecked="{Binding LayoutKind, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_main_models_data:NoteLayoutKind.Absolute}}" />
                  <RadioButton Content="relative" IsChecked="{Binding LayoutKind, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_main_models_data:NoteLayoutKind.Relative}}" />
                </WrapPanel>

                <Label>fore</Label>
                <app_core_views:ColorCanvas SelectedColor="{Binding ForegroundColor}" />
                <Label>back</Label>
                <app_core_views:ColorCanvas SelectedColor="{Binding BackgroundColor}" />

                <CheckBox Content="topmost" IsChecked="{Binding IsTopmost}" />

              </StackPanel>
            </GroupBox>
          </DataTemplate>

          <DataTemplate DataType="{x:Type app_main_viewmodels_setting:AppStandardInputOutputSettingEditorViewModel}">
            <GroupBox Header="{Binding Header}">
              <StackPanel>
                <ContentControl>
                  <ContentControl.Style>
                    <Style TargetType="ContentControl">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding IsInitialized}" Value="True">
                          <Setter Property="Content">
                            <Setter.Value>
                              <app_main_views:FontSelectControl
                                SelectedFontFamily="{Binding  Font.FontFamily}"
                                IsBold="{Binding Font.IsBold}"
                                IsItalic="{Binding Font.IsItalic}"
                                Size="{Binding Font.Size}"
                                SizeMinimum="{Binding Font.MinimumSize}"
                                SizeMaximum="{Binding Font.MaximumSize}"
                              />
                            </Setter.Value>
                          </Setter>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </ContentControl.Style>
                </ContentControl>

                <Label>output fore</Label>
                <app_core_views:ColorCanvas SelectedColor="{Binding OutputForegroundColor}" />
                <Label>output back</Label>
                <app_core_views:ColorCanvas SelectedColor="{Binding OutputBackgroundColor}" />

                <Label>error fore</Label>
                <app_core_views:ColorCanvas SelectedColor="{Binding ErrorForegroundColor}" />
                <Label>error back</Label>
                <app_core_views:ColorCanvas SelectedColor="{Binding ErrorBackgroundColor}" />

                <CheckBox Content="topmost" IsChecked="{Binding IsTopmost}" />

              </StackPanel>
            </GroupBox>
          </DataTemplate>

        </ItemsControl.Resources>
      </ItemsControl>
    </ScrollViewer>
  </Grid>
</UserControl>
