<UserControl
  x:Name="root"
  x:Class="ContentTypeTextNet.Pe.Main.Views.Setting.LauncherToobarsSettingControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:prism="http://prismlibrary.com/"

  xmlns:app_bridge_models_data="clr-namespace:ContentTypeTextNet.Pe.Bridge.Models.Data;assembly=Pe.Bridge"
  xmlns:app_core_views="clr-namespace:ContentTypeTextNet.Pe.Core.Views;assembly=Pe.Core"
  xmlns:app_core_views_converter="clr-namespace:ContentTypeTextNet.Pe.Core.Views.Converter;assembly=Pe.Core"
  xmlns:app_main_models_data="clr-namespace:ContentTypeTextNet.Pe.Main.Models.Data"
  xmlns:app_main_viewmodels_setting="clr-namespace:ContentTypeTextNet.Pe.Main.ViewModels.Setting"
  xmlns:app_main_views="clr-namespace:ContentTypeTextNet.Pe.Main.Views"
  xmlns:app_main_views_converter="clr-namespace:ContentTypeTextNet.Pe.Main.Views.Converter"
  xmlns:app_main="clr-namespace:ContentTypeTextNet.Pe.Main"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignWidth="800"
  d:DesignHeight="450"
>
  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <app_core_views_converter:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
    <app_main_views_converter:EnumToCultureConverter x:Key="EnumToCultureConverter" />
  </UserControl.Resources>

  <i:Interaction.Triggers>
    <app_core_views:RequestTrigger SourceObject="{Binding Editor.ShowAllScreensRequest, ElementName=root}">
      <prism:InvokeCommandAction Command="{Binding DisplayAllScreensCommand,ElementName=root}" />
    </app_core_views:RequestTrigger>
  </i:Interaction.Triggers>

  <Grid>
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>

      <Grid Grid.Row="0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Button Grid.Column="0" Content="{Binding Resources.String_Setting_LauncherToolbars_Command_Screen, Source={x:Static app_main:CultureService.Current}}" Command="{Binding Editor.ShowAllScreensCommand, ElementName=root}" />
        <ComboBox Grid.Column="1" ItemsSource="{Binding Editor.ToolbarItems, ElementName=root}" SelectedItem="{Binding Editor.SelectedToolbar, ElementName=root}">
          <ComboBox.ItemTemplate>
            <DataTemplate>
              <TextBlock>
                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding EnabledScreen}" Value="True">
                        <Setter Property="Text" Value="{Binding ScreenDisplayName}" />
                      </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Text" Value="{Binding ScreenName}" />
                  </Style>
                </TextBlock.Style>
              </TextBlock>
            </DataTemplate>
          </ComboBox.ItemTemplate>
        </ComboBox>
      </Grid>

      <ScrollViewer Grid.Row="1">
        <ContentControl Content="{Binding Editor.SelectedToolbar, ElementName=root}">
          <ContentControl.Resources>
            <Style x:Key="LabelDefinition" TargetType="ColumnDefinition">
              <Setter Property="Width" Value="Auto" />
              <Setter Property="SharedSizeGroup" Value="LabelGroup" />
            </Style>
            <Style x:Key="ContentDefinition" TargetType="ColumnDefinition">
              <Setter Property="Width" Value="*" />
            </Style>
          </ContentControl.Resources>

          <ContentControl.ContentTemplate>
            <DataTemplate DataType="{x:Type app_main_viewmodels_setting:LauncherToobarSettingEditorViewModel}">
              <StackPanel Grid.IsSharedSizeScope="True">

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Content="{Binding Resources.String_Setting_LauncherToolbars_ToolbarPosition_A, Source={x:Static app_main:CultureService.Current}}" />
                  <WrapPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                    <RadioButton Content="{Binding Resources.String_Setting_LauncherToolbars_ToolbarPosition_Left_A, Source={x:Static app_main:CultureService.Current}}" IsChecked="{Binding ToolbarPosition, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:AppDesktopToolbarPosition.Left}}" />
                    <RadioButton Content="{Binding Resources.String_Setting_LauncherToolbars_ToolbarPosition_Top_A, Source={x:Static app_main:CultureService.Current}}" IsChecked="{Binding ToolbarPosition, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:AppDesktopToolbarPosition.Top}}" />
                    <RadioButton Content="{Binding Resources.String_Setting_LauncherToolbars_ToolbarPosition_Right_A, Source={x:Static app_main:CultureService.Current}}" IsChecked="{Binding ToolbarPosition, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:AppDesktopToolbarPosition.Right}}" />
                    <RadioButton Content="{Binding Resources.String_Setting_LauncherToolbars_ToolbarPosition_Bottom_A, Source={x:Static app_main:CultureService.Current}}" IsChecked="{Binding ToolbarPosition, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:AppDesktopToolbarPosition.Bottom}}" />
                  </WrapPanel>
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Content="{Binding Resources.String_Setting_LauncherToolbars_IconDirection_A, Source={x:Static app_main:CultureService.Current}}" />
                  <WrapPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                    <RadioButton Content="{Binding Resources.String_Setting_LauncherToolbars_IconDirection_LeftTop_A, Source={x:Static app_main:CultureService.Current}}" IsChecked="{Binding IconDirection, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_main_models_data:LauncherToolbarIconDirection.LeftTop}}" />
                    <RadioButton Content="{Binding Resources.String_Setting_LauncherToolbars_IconDirection_Center_A, Source={x:Static app_main:CultureService.Current}}" IsChecked="{Binding IconDirection, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_main_models_data:LauncherToolbarIconDirection.Center}}" />
                    <RadioButton Content="{Binding Resources.String_Setting_LauncherToolbars_IconDirection_RightBottom_A, Source={x:Static app_main:CultureService.Current}}" IsChecked="{Binding IconDirection, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_main_models_data:LauncherToolbarIconDirection.RightBottom}}" />
                  </WrapPanel>
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Content="{Binding Resources.String_Setting_LauncherToolbars_Icon_A, Source={x:Static app_main:CultureService.Current}}" />
                  <WrapPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                    <RadioButton Content="{Binding Resources.String_Setting_LauncherToolbars_Icon_Small_A, Source={x:Static app_main:CultureService.Current}}" IsChecked="{Binding IconBox, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:IconBox.Small}}" />
                    <RadioButton Content="{Binding Resources.String_Setting_LauncherToolbars_Icon_Normal_A, Source={x:Static app_main:CultureService.Current}}" IsChecked="{Binding IconBox, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:IconBox.Normal}}" />
                    <RadioButton Content="{Binding Resources.String_Setting_LauncherToolbars_Icon_Big_A, Source={x:Static app_main:CultureService.Current}}" IsChecked="{Binding IconBox, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:IconBox.Big}}" />
                  </WrapPanel>
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Content="{Binding Resources.String_Setting_LauncherToolbars_TextFont_A, Source={x:Static app_main:CultureService.Current}}" />
                  <ContentControl Grid.Column="1">
                    <ContentControl.Style>
                      <Style TargetType="ContentControl">
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsInitialized}" Value="True">
                            <Setter Property="Content">
                              <Setter.Value>
                                <app_main_views:FontSelectControl
                                  SelectedFontFamily="{Binding  Font.FontFamily}"
                                  IsBold="{Binding Font.IsBold}"
                                  IsItalic="{Binding Font.IsItalic}"
                                  Size="{Binding Font.Size}"
                                  SizeMinimum="{Binding Font.MinimumSize}"
                                  SizeMaximum="{Binding Font.MaximumSize}"
                                />
                              </Setter.Value>
                            </Setter>
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </ContentControl.Style>
                  </ContentControl>
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label x:Name="textWidth" Grid.Column="0" Content="{Binding Resources.String_Setting_LauncherToolbars_TextWidth_A, Source={x:Static app_main:CultureService.Current}}" />
                  <app_core_views:NumericUpDown Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Width="{Binding ActualWidth, ElementName=textWidth}" Minimum="{Binding MinimumTextWidth}" Maximum="{Binding MaximumTextWidth}" Value="{Binding TextWidth}" />
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Content="{Binding Resources.String_Setting_LauncherToolbars_AutoHide_A, Source={x:Static app_main:CultureService.Current}}" />

                  <WrapPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                    <CheckBox VerticalAlignment="Center" Content="{Binding Resources.String_Setting_LauncherToolbars_AutoHide_Enabled_A, Source={x:Static app_main:CultureService.Current}}" IsChecked="{Binding IsAutoHide}" />
                    <Label x:Name="autoHideUnit" Content="{Binding Resources.String_Setting_LauncherToolbars_AutoHide_Unit_A, Source={x:Static app_main:CultureService.Current}}" />
                    <app_core_views:NumericUpDown VerticalAlignment="Center" Width="{Binding ActualWidth, ElementName=autoHideUnit}" Minimum="{Binding MinimumAutoHideTimeSeconds}" Maximum="{Binding MaximumAutoHideTimeSeconds}" Value="{Binding AutoHideTimeSeconds}" />
                  </WrapPanel>
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Content="{Binding Resources.String_Setting_LauncherToolbars_Others_A, Source={x:Static app_main:CultureService.Current}}" />

                  <WrapPanel Grid.Column="1" VerticalAlignment="Center">
                    <CheckBox Content="{Binding Resources.String_Setting_LauncherToolbars_Visible_A, Source={x:Static app_main:CultureService.Current}}" IsChecked="{Binding IsVisible}" />
                    <CheckBox Content="{Binding Resources.String_Setting_LauncherToolbars_IconOnly_A, Source={x:Static app_main:CultureService.Current}}" IsChecked="{Binding IsIconOnly}" />
                  </WrapPanel>

                </Grid>

              </StackPanel>
            </DataTemplate>
          </ContentControl.ContentTemplate>
        </ContentControl>
      </ScrollViewer>

    </Grid>
  </Grid>
</UserControl>
