<UserControl
  x:Name="root"
  x:Class="ContentTypeTextNet.Pe.Main.Views.Setting.LauncherToobarsSettingControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:prism="http://prismlibrary.com/"

  xmlns:app_bridge_models_data="clr-namespace:ContentTypeTextNet.Pe.Bridge.Models.Data;assembly=Pe.Bridge"
  xmlns:app_core_views="clr-namespace:ContentTypeTextNet.Pe.Core.Views;assembly=Pe.Core"
  xmlns:app_core_views_converter="clr-namespace:ContentTypeTextNet.Pe.Core.Views.Converter;assembly=Pe.Core"
  xmlns:app_main_models_data="clr-namespace:ContentTypeTextNet.Pe.Main.Models.Data"
  xmlns:app_main_viewmodels_setting="clr-namespace:ContentTypeTextNet.Pe.Main.ViewModels.Setting"
  xmlns:app_main_views="clr-namespace:ContentTypeTextNet.Pe.Main.Views"
  xmlns:app_main_views_converter="clr-namespace:ContentTypeTextNet.Pe.Main.Views.Converter"
  xmlns:app_main="clr-namespace:ContentTypeTextNet.Pe.Main"

  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  mc:Ignorable="d"
  d:DesignWidth="800"
  d:DesignHeight="450"
>
  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <app_core_views_converter:LogicalIsNotNullConverter x:Key="LogicalIsNotNullConverter" />
    <app_core_views_converter:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
    <app_core_views_converter:EscapeAccessKeyConverter x:Key="EscapeAccessKeyConverter" />
    <app_main_views_converter:EnumToCultureConverter x:Key="EnumToCultureConverter" />
  </UserControl.Resources>

  <i:Interaction.Triggers>
    <app_core_views:RequestTrigger SourceObject="{Binding Editor.ShowAllScreensRequest, RelativeSource={RelativeSource AncestorType=UserControl}}">
      <prism:InvokeCommandAction Command="{Binding DisplayAllScreensCommand,ElementName=root}" />
    </app_core_views:RequestTrigger>
  </i:Interaction.Triggers>

  <Grid>
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>

      <Grid Grid.Row="0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Button Grid.Column="0" Content="{Binding Resources.String_Setting_LauncherToolbars_Screen_A, Source={x:Static app_main:CultureService.Instance}}" Command="{Binding Editor.ShowAllScreensCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" />
        <ComboBox Grid.Column="1" ItemsSource="{Binding Editor.ToolbarItems, RelativeSource={RelativeSource AncestorType=UserControl}}" SelectedItem="{Binding Editor.SelectedToolbar, RelativeSource={RelativeSource AncestorType=UserControl}}">
          <ComboBox.ItemTemplate>
            <DataTemplate>
              <TextBlock>
                <TextBlock.Style>
                  <Style TargetType="TextBlock">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding EnabledScreen}" Value="True">
                        <Setter Property="Text" Value="{Binding ScreenDisplayName}" />
                      </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Text" Value="{Binding ScreenName}" />
                  </Style>
                </TextBlock.Style>
              </TextBlock>
            </DataTemplate>
          </ComboBox.ItemTemplate>
        </ComboBox>
      </Grid>

      <ScrollViewer Grid.Row="1">
        <ContentControl IsTabStop="False" Content="{Binding Editor.SelectedToolbar, RelativeSource={RelativeSource AncestorType=UserControl}}">
          <ContentControl.Resources>
            <Style x:Key="LabelDefinition" TargetType="ColumnDefinition">
              <Setter Property="Width" Value="Auto" />
              <Setter Property="SharedSizeGroup" Value="LabelGroup" />
            </Style>
            <Style x:Key="ContentDefinition" TargetType="ColumnDefinition">
              <Setter Property="Width" Value="*" />
            </Style>
          </ContentControl.Resources>

          <ContentControl.ContentTemplate>
            <DataTemplate DataType="{x:Type app_main_viewmodels_setting:LauncherToobarSettingEditorViewModel}">
              <StackPanel x:Name="item" Grid.IsSharedSizeScope="True">

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_Setting_LauncherToolbars_DefaultGroup_A, Source={x:Static app_main:CultureService.Instance}}" />
                  <Grid Grid.Column="1" HorizontalAlignment="Left">
                    <ToggleButton x:Name="groupPopup" Width="150" IsChecked="{Binding ShowGroupPopupMenu}">
                      <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedLauncherGroup, Converter={StaticResource LogicalIsNotNullConverter}}" Value="True">
                              <Setter Property="Content" Value="{Binding SelectedLauncherGroup}" />
                              <Setter Property="ContentTemplate" Value="{StaticResource Setting-LauncherGroups}" />
                            </DataTrigger>
                          </Style.Triggers>
                          <Setter Property="ContentTemplate">
                            <Setter.Value>
                              <DataTemplate>
                                <AccessText Text="{Binding Resources.String_Setting_LauncherToolbars_DefaultGroup_None_A, Source={x:Static app_main:CultureService.Instance}}"  />
                              </DataTemplate>
                            </Setter.Value>
                          </Setter>
                        </Style>
                      </ToggleButton.Style>
                    </ToggleButton>
                    <Popup IsOpen="{Binding IsChecked, ElementName=groupPopup}" Style="{StaticResource PopupMenu}">
                      <Border Style="{StaticResource PopupMenuBorder}">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                          <StackPanel>
                            <MenuItem Header="{Binding Resources.String_Setting_LauncherToolbars_DefaultGroup_None_A, Source={x:Static app_main:CultureService.Instance}}" Command="{Binding DataContext.SelectDefaultLauncherGroupCommand, ElementName=item}" CommandParameter="{x:Null}" />
                            <ItemsControl ItemsSource="{Binding Editor.AllLauncherGroupItems, Source={x:Reference root}}">
                              <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                  <MenuItem Icon="{Binding GroupIcon}" Header="{Binding Name, Converter={StaticResource EscapeAccessKeyConverter}}" Command="{Binding DataContext.SelectDefaultLauncherGroupCommand, ElementName=item}" CommandParameter="{Binding}" />
                                </DataTemplate>
                              </ItemsControl.ItemTemplate>
                            </ItemsControl>
                          </StackPanel>
                        </ScrollViewer>
                      </Border>
                    </Popup>
                  </Grid>
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_Setting_LauncherToolbars_ToolbarPosition_A, Source={x:Static app_main:CultureService.Instance}}" />
                  <Grid Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="{StaticResource VericalMargin}">
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition />
                      <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition />
                      <ColumnDefinition />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <RadioButton Grid.Row="1" Grid.Column="0" Content="{Binding Source={x:Static app_bridge_models_data:AppDesktopToolbarPosition.Left}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding ToolbarPosition, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:AppDesktopToolbarPosition.Left}}" />
                    <RadioButton Grid.Row="0" Grid.Column="1" Content="{Binding Source={x:Static app_bridge_models_data:AppDesktopToolbarPosition.Top}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding ToolbarPosition, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:AppDesktopToolbarPosition.Top}}" />
                    <RadioButton Grid.Row="1" Grid.Column="2" Content="{Binding Source={x:Static app_bridge_models_data:AppDesktopToolbarPosition.Right}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding ToolbarPosition, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:AppDesktopToolbarPosition.Right}}" />
                    <RadioButton Grid.Row="2" Grid.Column="1" Content="{Binding Source={x:Static app_bridge_models_data:AppDesktopToolbarPosition.Bottom}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding ToolbarPosition, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:AppDesktopToolbarPosition.Bottom}}" />
                  </Grid>
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_Setting_LauncherToolbars_IconDirection_A, Source={x:Static app_main:CultureService.Instance}}" />
                  <WrapPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                    <RadioButton Style="{StaticResource Horizontal-RadioButton}" Content="{Binding Source={x:Static app_main_models_data:LauncherToolbarIconDirection.LeftTop}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding IconDirection, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_main_models_data:LauncherToolbarIconDirection.LeftTop}}" />
                    <RadioButton Style="{StaticResource Horizontal-RadioButton}" Content="{Binding Source={x:Static app_main_models_data:LauncherToolbarIconDirection.Center}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding IconDirection, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_main_models_data:LauncherToolbarIconDirection.Center}}" />
                    <RadioButton Style="{StaticResource Horizontal-RadioButton}" Content="{Binding Source={x:Static app_main_models_data:LauncherToolbarIconDirection.RightBottom}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding IconDirection, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_main_models_data:LauncherToolbarIconDirection.RightBottom}}" />
                  </WrapPanel>
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_Setting_LauncherToolbars_IconSize_A, Source={x:Static app_main:CultureService.Instance}}" />
                  <WrapPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                    <RadioButton Style="{StaticResource Horizontal-RadioButton}" Content="{Binding Source={x:Static app_bridge_models_data:IconBox.Small}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding IconBox, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:IconBox.Small}}" />
                    <RadioButton Style="{StaticResource Horizontal-RadioButton}" Content="{Binding Source={x:Static app_bridge_models_data:IconBox.Normal}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding IconBox, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:IconBox.Normal}}" />
                    <RadioButton Style="{StaticResource Horizontal-RadioButton}" Content="{Binding Source={x:Static app_bridge_models_data:IconBox.Big}, Converter={StaticResource EnumToCultureConverter}, ConverterParameter=A}" IsChecked="{Binding IconBox, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static app_bridge_models_data:IconBox.Big}}" />
                  </WrapPanel>
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_Setting_LauncherToolbars_TextFont_A, Source={x:Static app_main:CultureService.Instance}}" />
                  <ContentControl Grid.Column="1">
                    <ContentControl.Style>
                      <Style TargetType="ContentControl">
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding IsInitialized}" Value="True">
                            <Setter Property="Content">
                              <Setter.Value>
                                <app_main_views:FontSelectControl
                                  SelectedFontFamily="{Binding  Font.FontFamily}"
                                  IsBold="{Binding Font.IsBold}"
                                  IsItalic="{Binding Font.IsItalic}"
                                  Size="{Binding Font.Size}"
                                  SizeMinimum="{Binding Font.MinimumSize}"
                                  SizeMaximum="{Binding Font.MaximumSize}"
                                />
                              </Setter.Value>
                            </Setter>
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </ContentControl.Style>
                  </ContentControl>
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label x:Name="textWidth" Style="{StaticResource HeaderLabel}" Grid.Column="0" Content="{Binding Resources.String_Setting_LauncherToolbars_TextWidth_A, Source={x:Static app_main:CultureService.Instance}}" />
                  <app_core_views:NumericUpDown Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Width="{Binding ActualWidth, ElementName=textWidth}" Minimum="{Binding MinimumTextWidth}" Maximum="{Binding MaximumTextWidth}" Value="{Binding TextWidth}" />
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_Setting_LauncherToolbars_AutoHide_A, Source={x:Static app_main:CultureService.Instance}}" />

                  <WrapPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                    <CheckBox VerticalAlignment="Center" Style="{StaticResource Horizontal-CheckBox}" Content="{Binding Resources.String_Setting_LauncherToolbars_AutoHide_Enabled_A, Source={x:Static app_main:CultureService.Instance}}" IsChecked="{Binding IsAutoHide}" />
                    <Label x:Name="autoHideUnit" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_Setting_LauncherToolbars_AutoHide_Unit_A, Source={x:Static app_main:CultureService.Instance}}" />
                    <app_core_views:NumericUpDown VerticalAlignment="Center" Width="{Binding ActualWidth, ElementName=autoHideUnit}" Minimum="{Binding MinimumAutoHideTimeSeconds}" Maximum="{Binding MaximumAutoHideTimeSeconds}" Value="{Binding AutoHideTimeSeconds}" />
                  </WrapPanel>
                </Grid>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource LabelDefinition}" />
                    <ColumnDefinition Style="{StaticResource ContentDefinition}" />
                  </Grid.ColumnDefinitions>

                  <Label Grid.Column="0" Style="{StaticResource HeaderLabel}" Content="{Binding Resources.String_Setting_LauncherToolbars_Others_A, Source={x:Static app_main:CultureService.Instance}}" />

                  <WrapPanel Grid.Column="1" VerticalAlignment="Center">
                    <CheckBox Style="{StaticResource Horizontal-CheckBox}" Content="{Binding Resources.String_Setting_LauncherToolbars_Visible_A, Source={x:Static app_main:CultureService.Instance}}" IsChecked="{Binding IsVisible}" />
                    <CheckBox Style="{StaticResource Horizontal-CheckBox}" Content="{Binding Resources.String_Setting_LauncherToolbars_IconOnly_A, Source={x:Static app_main:CultureService.Instance}}" IsChecked="{Binding IsIconOnly}" />
                  </WrapPanel>

                </Grid>

              </StackPanel>
            </DataTemplate>
          </ContentControl.ContentTemplate>
        </ContentControl>
      </ScrollViewer>

    </Grid>
  </Grid>
</UserControl>
