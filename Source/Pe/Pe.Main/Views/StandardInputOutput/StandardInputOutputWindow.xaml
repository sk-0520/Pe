<Window
  x:Name="root"
  x:Class="ContentTypeTextNet.Pe.Main.Views.StandardInputOutput.StandardInputOutputWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:prism="http://prismlibrary.com/"

  xmlns:sharpdevelop_avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"

  xmlns:app_core_views="clr-namespace:ContentTypeTextNet.Pe.Core.Views;assembly=Pe.Core"
  xmlns:app_core_views_selector="clr-namespace:ContentTypeTextNet.Pe.Core.Views.Selector;assembly=Pe.Core"

  Title="StandardInputOutputWindow"
  Width="800"
  Height="450"

  ResizeMode="CanResizeWithGrip"

  Topmost="{Binding IsTopmost}"

  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d"
>
  <Window.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  </Window.Resources>
  <Window.Visibility>
    <Binding Path="IsVisible" Converter="{StaticResource BooleanToVisibilityConverter}"/>
  </Window.Visibility>
  <i:Interaction.Triggers>
    <app_core_views:RequestTrigger SourceObject="{Binding FileSelectRequest}">
      <prism:InvokeCommandAction Command="{Binding FileSelectCommand ,ElementName=root}" />
    </app_core_views:RequestTrigger>
  </i:Interaction.Triggers>
  <DockPanel>
    <ToolBar DockPanel.Dock="Top">
      <ToggleButton IsChecked="{Binding IsTopmost}" Content="topmost" />
      <ToggleButton IsChecked="{Binding AutoScroll}"  Content="auto scroll" />
      <ToggleButton IsChecked="{Binding WordWrap}"  Content="wrap" />

      <Separator />

      <Button Content="save" Command="{Binding SaveCommand}" />
      <Button Content="clear" Command="{Binding ClearOutputCommand}" />

      <Separator />

      <Button Content="kill" Command="{Binding KillOutputCommand}" />

    </ToolBar>

    <StatusBar DockPanel.Dock="Bottom">
      <Label Content="start"/>
    </StatusBar>

    <TabControl>
      <TabItem Header="stdio">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>

          <sharpdevelop_avalonedit:TextEditor
            x:Name="terminal"
            Grid.Row="0"
            IsReadOnly="True"
            WordWrap="{Binding WordWrap}"
            Document="{Binding TextDocument}"
            HorizontalScrollBarVisibility="Auto"
          />

          <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ComboBox
              Grid.Column="0"
              IsEditable="True"
              IsReadOnly="{Binding ProcessExited}"
              Text="{Binding InputValue, UpdateSourceTrigger=PropertyChanged}"
              ItemsSource="{Binding InputedValues}"
            >
              <ComboBox.InputBindings>
                <KeyBinding Key="Return" Command="{Binding SendInputCommand}" />
                <KeyBinding Key="Esc" Command="{Binding ClearInputCommand}" />
              </ComboBox.InputBindings>
              <ComboBox.ItemsPanel>
                <ItemsPanelTemplate>
                  <VirtualizingStackPanel
                        VirtualizingStackPanel.IsVirtualizing="True"
                        VirtualizingStackPanel.VirtualizationMode="Recycling"
                      />
                </ItemsPanelTemplate>
              </ComboBox.ItemsPanel>
              <ComboBox.ItemTemplateSelector>
                <app_core_views_selector:ComboBoxItemTemplateSelector>
                  <app_core_views_selector:ComboBoxItemTemplateSelector.SelectedTemplate>
                    <DataTemplate>
                      <TextBlock Text="{Binding Value, Mode=OneTime}"/>
                    </DataTemplate>
                  </app_core_views_selector:ComboBoxItemTemplateSelector.SelectedTemplate>

                  <app_core_views_selector:ComboBoxItemTemplateSelector.DropDownTemplate>
                    <DataTemplate>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="{Binding Value, Mode=OneTime}" />

                        <TextBlock Grid.Column="1">
                          <Run Text=" (" />
                          <Run Text="{Binding Timestamp, Mode=OneTime}"/>
                          <Run Text=" )" />
                        </TextBlock>

                      </Grid>
                    </DataTemplate>
                  </app_core_views_selector:ComboBoxItemTemplateSelector.DropDownTemplate>
                </app_core_views_selector:ComboBoxItemTemplateSelector>
              </ComboBox.ItemTemplateSelector>
            </ComboBox>
            <Button
              Grid.Column="1"
              Content="send"
              Command="{Binding SendInputCommand}"
            />
          </Grid>

        </Grid>
      </TabItem>
    </TabControl>
  </DockPanel>
</Window>
