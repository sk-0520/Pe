<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:Taskbar="http://www.hardcodet.net/taskbar"

  xmlns:cttn_lib_shared_lib_view_converter="clr-namespace:ContentTypeTextNet.Pe.Library.Shared.Library.View.Converter;assembly=Shared.Library"
  xmlns:app_main_viewmodel_manager="clr-namespace:ContentTypeTextNet.Pe.Main.ViewModel.Manager"
  xmlns:app_main_view_attached="clr-namespace:ContentTypeTextNet.Pe.Main.View.Attached"
>
  <ContextMenu x:Key="ContextMenu">
    <ContextMenu.Resources>
      <cttn_lib_shared_lib_view_converter:EscapeAccessKeyConverter x:Key="EscapeAccessKeyConverter" />

      <Style x:Key="INotifyAreaMenuItem" TargetType="MenuItem" >
        <Style.Triggers>
          <DataTrigger Binding="{Binding MenuHeaderHasAccessKey}" Value="False">
            <Setter Property="Header" Value="{Binding MenuHeader, Converter={StaticResource EscapeAccessKeyConverter}}" />
          </DataTrigger>
          <DataTrigger Binding="{Binding MenuHasIcon}" Value="True">
            <Setter Property="Icon" Value="{Binding MenuIcon}" />
            <Setter Property="IsCheckable" Value="False" />
            <Setter Property="IsChecked" Value="False" />
          </DataTrigger>
          <DataTrigger Binding="{Binding MenuHasIcon}" Value="False">
            <Setter Property="IsCheckable" Value="True" />
            <Setter Property="IsChecked" Value="{Binding MenuIsChecked, Mode=OneWay}" />
          </DataTrigger>
          <DataTrigger Binding="{Binding MenuIsChecked}" Value="True">
            <Setter Property="FontWeight" Value="Bold" />
          </DataTrigger>
        </Style.Triggers>
        <Setter Property="Header" Value="{Binding MenuHeader}" />
        <Setter Property="Command" Value="{Binding MenuCommand}" />
        <Setter Property="CommandParameter" Value="{Binding}" />
      </Style>
    </ContextMenu.Resources>

    <MenuItem Header="toolbar" ItemsSource="{Binding LauncherToolbarItems}" ItemContainerStyle="{StaticResource INotifyAreaMenuItem}" >
      <!--<MenuItem.ItemContainerStyle>
        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
          <Style.Triggers>
            <DataTrigger Binding="{Binding IsVisible}" Value="True">
              <Setter Property="FontWeight" Value="Bold" />
              <Setter Property="Effect" Value="{StaticResource Effect-Strong}" />
            </DataTrigger>
          </Style.Triggers>
          <Setter Property="Icon" Value="{Binding ToolbarIcon}" />
          <Setter Property="Header" Value="{Binding DisplayName}" />
          <Setter Property="Command" Value="{Binding SwitchToolbarCommand}" />
          <Setter Property="CommandParameter" Value="{Binding}" />
        </Style>
      </MenuItem.ItemContainerStyle>-->
    </MenuItem>
    <MenuItem Header="note" IsSubmenuOpen="{Binding IsOpenNoteMenu, Mode=OneWayToSource}">
      <MenuItem Header="create" Command="{Binding CreateNoteCommand}" />
      <Separator />
      <MenuItem Header="compact" />
      <MenuItem Header="topmost" Command="{Binding MoveFrontAllNotesCommand}" />
      <Separator />
      <MenuItem Header="show" ItemsSource="{Binding NoteVisibleItems}" ItemContainerStyle="{StaticResource INotifyAreaMenuItem}" />
      <MenuItem Header="hidden" ItemsSource="{Binding NoteHiddenItems}" ItemContainerStyle="{StaticResource INotifyAreaMenuItem}" />
    </MenuItem>
    <MenuItem Header="exit" Command="{Binding ExitCommand}" />
  </ContextMenu>

  <Taskbar:TaskbarIcon
    x:Key="root"
    Tag="{Binding DataContext,RelativeSource={RelativeSource Mode=Self}, Mode=OneWay}"
    ContextMenu="{StaticResource ContextMenu}"
  >
    <Taskbar:TaskbarIcon.Style>
      <Style TargetType="Taskbar:TaskbarIcon">
        <Style.Triggers>
          <DataTrigger Binding="{Binding BuildType}" Value="Debug">
            <Setter Property="IconSource" Value="/Resources/Icon/NotifyIcon/App-debug.ico" />
          </DataTrigger>
          <DataTrigger Binding="{Binding BuildType}" Value="Beta">
            <Setter Property="IconSource" Value="/Resources/Icon/NotifyIcon/App-beta.ico" />
          </DataTrigger>
          <DataTrigger Binding="{Binding BuildType}" Value="Release">
            <Setter Property="IconSource" Value="/Resources/Icon/NotifyIcon/App-release.ico" />
          </DataTrigger>
        </Style.Triggers>
      </Style>
    </Taskbar:TaskbarIcon.Style>
  </Taskbar:TaskbarIcon>

</ResourceDictionary>
