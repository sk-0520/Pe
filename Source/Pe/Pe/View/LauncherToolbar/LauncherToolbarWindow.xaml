<Window
  x:Name="root"
  x:Class="ContentTypeTextNet.Pe.Main.View.LauncherToolbar.LauncherToolbarWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

  xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
  xmlns:prism="http://prismlibrary.com/"

  xmlns:cttn_lib_shared_lib_view_converter="clr-namespace:ContentTypeTextNet.Pe.Library.Shared.Library.View.Converter;assembly=Shared.Library"

  xmlns:app_main_view="clr-namespace:ContentTypeTextNet.Pe.Main.View"
  xmlns:app_main_view_lt="clr-namespace:ContentTypeTextNet.Pe.Main.View.LauncherToolbar"
  xmlns:app_main_viewmode_litem="clr-namespace:ContentTypeTextNet.Pe.Main.ViewModel.LauncherItem"
  xmlns:app_main_view_ex="clr-namespace:ContentTypeTextNet.Pe.Main.View.Extend"

  Title="LauncherToolbarWindow"
  Height="450"
  Width="800"

  WindowStyle="None"
  WindowStartupLocation="Manual"
  BorderThickness="0"
  ResizeMode="NoResize"
  ShowInTaskbar="False"

  Topmost="{Binding IsTopmost}"

  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d"
>
  <Window.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <cttn_lib_shared_lib_view_converter:LogicalNotConverter x:Key="LogicalNotConverter" />
    <cttn_lib_shared_lib_view_converter:IconScaleToWidthConverter x:Key="IconScaleToWidthConverter" />
    <cttn_lib_shared_lib_view_converter:IconScaleToHeightConverter x:Key="IconScaleToHeightConverter" />

    <Style x:Key="DropMenu" TargetType="Popup" BasedOn="{StaticResource PopupMenu}">
      <Style.Triggers>
        <DataTrigger Binding="{Binding DataContext.ToolbarPosition, ElementName=root}" Value="Left">
          <Setter Property="Placement" Value="Right" />
        </DataTrigger>
        <DataTrigger Binding="{Binding DataContext.ToolbarPosition, ElementName=root}" Value="Right">
          <Setter Property="Placement" Value="Left" />
        </DataTrigger>
        <DataTrigger Binding="{Binding DataContext.ToolbarPosition, ElementName=root}" Value="Top">
          <Setter Property="Placement" Value="Bottom" />
        </DataTrigger>
        <DataTrigger Binding="{Binding DataContext.ToolbarPosition, ElementName=root}" Value="Bottom">
          <Setter Property="Placement" Value="Top" />
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <Style TargetType="app_main_view_lt:LauncherContentControl">
      <Style.Triggers>
        <DataTrigger Binding="{Binding DataContext.IconScale, ElementName=root}" Value="Small">
          <Setter Property="Icon" Value="{Binding Icon.Small}" />
        </DataTrigger>
        <DataTrigger Binding="{Binding DataContext.IconScale, ElementName=root}" Value="Normal">
          <Setter Property="Icon" Value="{Binding Icon.Normal}" />
        </DataTrigger>
        <DataTrigger Binding="{Binding DataContext.IconScale, ElementName=root}" Value="Big">
          <Setter Property="Icon" Value="{Binding Icon.Big}" />
        </DataTrigger>
        <DataTrigger Binding="{Binding DataContext.IconScale, ElementName=root}" Value="Large">
          <Setter Property="Icon" Value="{Binding Icon.Large}" />
        </DataTrigger>
      </Style.Triggers>
      <Setter Property="IconMargin" Value="{Binding DataContext.IconMargin, ElementName=root}" />
      <Setter Property="IsIconOnly" Value="{Binding DataContext.IsIconOnly, ElementName=root}" />
      <Setter Property="TextWidth" Value="{Binding DataContext.TextWidth, ElementName=root}" />
    </Style>

    <ControlTemplate x:Key="LauncherItemTemplate" TargetType="ContentControl">
      <Border Background="Transparent" Padding="{Binding DataContext.ButtonPadding, ElementName=root, Mode=OneTime}">
        <ContentPresenter Content="{TemplateBinding Content}" />
      </Border>
    </ControlTemplate>

    <ContextMenu x:Key="ItemContextMenu">
      <ContextMenu.Resources>
        <CollectionViewSource x:Key="LauncherGroupItems" Source="{Binding DataContext.LauncherGroupItems, Source={x:Reference root}}" />
      </ContextMenu.Resources>
      <ContextMenu.ItemsSource>
        <CompositeCollection>
          <MenuItem Header="exec" />
          <MenuItem Header="ex exec" />
          <Separator />
          <MenuItem Header="open dir" />
          <MenuItem Header="open work" />
          <Separator />
          <MenuItem Header="copy command" />
          <MenuItem Header="copy dir" />
          <MenuItem Header="copy work" />
          <Separator />
          <CollectionContainer Collection="{Binding Source={StaticResource LauncherGroupItems}}" />
        </CompositeCollection>
      </ContextMenu.ItemsSource>
    </ContextMenu>

    <!-- ファイル -->
    <DataTemplate DataType="{x:Type app_main_viewmode_litem:LauncherFileItemViewModel}">
      <Button ContextMenu="{StaticResource ItemContextMenu}" Template="{StaticResource LauncherItemTemplate}">
        <app_main_view_lt:LauncherContentControl Title="{Binding Name, Mode=OneTime}" />
      </Button>
    </DataTemplate>


  </Window.Resources>
  <i:Interaction.Triggers>
    <prism:InteractionRequestTrigger SourceObject="{Binding CloseRequest}">
      <prism:InvokeCommandAction Command="{Binding CloseCommand ,ElementName=root}" />
    </prism:InteractionRequestTrigger>
  </i:Interaction.Triggers>

  <Window.Visibility>
    <Binding Path="IsVisible" Converter="{StaticResource BooleanToVisibilityConverter}"/>
  </Window.Visibility>
  <Window.ContextMenu>
    <ContextMenu ItemsSource="{Binding LauncherGroupItems}" />
  </Window.ContextMenu>
  <DockPanel>

    <ToggleButton x:Name="appButton" IsChecked="{Binding IsOpendAppMenu}" Template="{StaticResource LauncherItemTemplate}" IsEnabled="{Binding IsOpen, ElementName=appPopup, Converter={StaticResource LogicalNotConverter}}">
      <ToggleButton.Style>
        <Style TargetType="ToggleButton">
          <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.ToolbarPosition, ElementName=root}" Value="Left">
              <Setter Property="DockPanel.Dock" Value="Top" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.ToolbarPosition, ElementName=root}" Value="Right">
              <Setter Property="DockPanel.Dock" Value="Top" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.ToolbarPosition, ElementName=root}" Value="Top">
              <Setter Property="DockPanel.Dock" Value="Left" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.ToolbarPosition, ElementName=root}" Value="Bottom">
              <Setter Property="DockPanel.Dock" Value="Left" />
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </ToggleButton.Style>
      <Grid>
        <app_main_view_lt:LauncherContentControl Title="pe" >
          <app_main_view_lt:LauncherContentControl.Icon>
            <ContentControl
              Style="{StaticResource NormalIcon}"
              Content="{StaticResource Image-HamburgerMenu}"
              Width="{Binding IconScale, Converter={StaticResource IconScaleToWidthConverter}}"
              Height="{Binding IconScale, Converter={StaticResource IconScaleToHeightConverter}}"
              Background="Black"
              Foreground="Gray"
            />
          </app_main_view_lt:LauncherContentControl.Icon>
        </app_main_view_lt:LauncherContentControl>
        <Popup x:Name="appPopup" Style="{StaticResource DropMenu}" IsOpen="{Binding IsChecked, ElementName=appButton}">
          <Border>
            <StackPanel>
              <TextBlock>position</TextBlock>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition />
                  <RowDefinition />
                  <RowDefinition />
                </Grid.RowDefinitions>

                <Button Grid.Row="1" Grid.Column="0" Command="{Binding ChangeToolbarPositionCommand}" CommandParameter="{x:Static app_main_view_ex:AppDesktopToolbarPosition.Left}">left</Button>
                <Button Grid.Row="0" Grid.Column="1" Command="{Binding ChangeToolbarPositionCommand}" CommandParameter="{x:Static app_main_view_ex:AppDesktopToolbarPosition.Top}">top</Button>
                <Button Grid.Row="1" Grid.Column="2" Command="{Binding ChangeToolbarPositionCommand}" CommandParameter="{x:Static app_main_view_ex:AppDesktopToolbarPosition.Right}">right</Button>
                <Button Grid.Row="2" Grid.Column="1" Command="{Binding ChangeToolbarPositionCommand}" CommandParameter="{x:Static app_main_view_ex:AppDesktopToolbarPosition.Bottom}">bottom</Button>

              </Grid>

              <Separator />

              <MenuItem Header="topmost" IsChecked="{Binding IsTopmost, Mode=OneWay}" Command="{Binding SwitchTopmostCommand}" />
              <MenuItem Header="auto hide" IsChecked="{Binding IsAutoHide, Mode=OneWay}" Command="{Binding SwitchAutoHideCommand}" />

              <Separator />

              <MenuItem Header="close" Command="{Binding CloseCommand}" />

              <Separator />

              <ItemsControl ItemsSource="{Binding LauncherGroupItems}">
                <ItemsControl.ItemTemplate>
                  <DataTemplate>
                    <MenuItem Header="{Binding}" />
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
            </StackPanel>
          </Border>
        </Popup>
      </Grid>
    </ToggleButton>

    <ItemsControl ItemsSource="{Binding LauncherItems}">
      <ItemsControl.Resources>
        <!--<CollectionViewSource x:Key="LauncherGroupItems" Source="{Binding DataContext.LauncherGroupItems, ElementName=root}" />
        <ContextMenu x:Key="ItemContextMenu">
          <ContextMenu.ItemsSource>
            <CompositeCollection>
              <TextBlock Text="{Binding}" />
              <MenuItem Header="exec" />
              <MenuItem Header="ex exec" />
              <Separator />
              <MenuItem Header="open dir" />
              <MenuItem Header="open work" />
              <Separator />
              <MenuItem Header="copy command" />
              <MenuItem Header="copy dir" />
              <MenuItem Header="copy work" />
              <Separator />
              <CollectionContainer Collection="{Binding Source={StaticResource LauncherGroupItems}}" />
            </CompositeCollection>

          </ContextMenu.ItemsSource>
        </ContextMenu>

        <Style TargetType="ContentPresenter">
          <EventSetter Event="ContextMenuOpening" Handler="ContentPresenter_ContextMenuOpening" />
          <EventSetter Event="ContextMenuClosing" Handler="ContentPresenter_ContextMenuClosing" />
          <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
        </Style>-->
      </ItemsControl.Resources>
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <StackPanel />
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
    </ItemsControl>

  </DockPanel>
</Window>
