<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
int parameterCount = 30;
#>
using System;

namespace ContentTypeTextNet.Pe.Core.Models
{
        partial class DiConstructorCache {
        <# for(var i = 0; i < parameterCount; i++) { #>
        private delegate object DiConstructorCacheP<#= i + 1 #>(<#= string.Join(", ", Enumerable.Repeat("object p", i + 1).Select((v,i) => v + (i + 1))) #>);
        <# } #>

        private Func<object[], object> CreateCore(object[] parameters)
        {
            switch(ParameterInfos.Count) {
                <# for(var i = 0; i < parameterCount; i++) { #>
                case <#= i + 1 #>: {
                    var creator = CreateFunction<DiConstructorCacheP<#= i + 1 #>>();
                    return p => creator(<#= string.Join(", ", Enumerable.Repeat("p", i + 1).Select((v, i) => $"{v}[{i}]")) #>);
                }
                <# } #>

                default:
                    return ConstructorInfo.Invoke;
            }
        }
    }
}

