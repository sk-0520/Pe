<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#+

class TextParseItem
{
    public TextParseItem(string description, string name, string type, bool hasSigned, int width)
    {
        Description = description;
        Name = name;
        Type = type;
        HasSigned = hasSigned;
        Width = width;
    }

    #region property

    public string Description { get; }

    public string Name { get; }

    public string Type { get; }

    public int Width { get; }

    public bool HasSigned { get; }

    public bool Is64BitOnly
    {
        get
        {
            return Width == 64;
        }
    }

    public string ParsedResultStructName
    {
        get
        {
            return "TEXT_PARSED_" + Name.ToUpperInvariant() + "_RESULT";
        }
    }

    public string CreateFailedFunctionName
    {
        get
        {
            return "create_failed_" + Name + "_parse_result";
        }
    }

    public string ParseFromTextFunctionName
    {
        get
        {
            return "parse_" + Name + "_from_text";
        }
    }

    #endregion

    #region function

    public static IEnumerable<TextParseItem> GetItems()
    {
        return new [] {
            new TextParseItem("32bit符号あり整数", "i32", "int32_t", true, 32),
            new TextParseItem("32bit符号なし整数", "u32", "uint32_t", false, 32),
            new TextParseItem("64bit符号あり整数", "i64", "int64_t", true, 64),
            new TextParseItem("64bit符号なし整数", "u64", "uint64_t", false, 64),
        };
    }

    #endregion
}

#>
