<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output encoding="utf-8" extension="" #>
<#
    var items = TokenLoader.ParseFromDefault(Host).ToList();
#>
#pragma once
/* 自動生成: lexical_token.gen.h.tt */
#include "source.h"
#include "script.h"

typedef enum tag_<#= TokenUtility.TokenKind #>
{
    /// <summary>
    /// なんやろね。
    /// </summary>
    <#= TokenUtility.None #>,
    /// <summary>
    /// 関数名とか変数名とか。
    /// </summary>
    <#= TokenUtility.Word #>,
<# foreach(var item in items) { #>
<#= TokenUtility.ToDefineKind(item, 1, true) #>,
<# } #>
} <#= TokenUtility.TokenKind #>;

typedef enum tag_TOKEN_VALUE_TYPE
{
    TOKEN_VALUE_TYPE_NONE,
    TOKEN_VALUE_TYPE_STRING,
    TOKEN_VALUE_TYPE_INTEGER,
    TOKEN_VALUE_TYPE_DECIMAL,
} TOKEN_VALUE_TYPE;

typedef union tag_TOKEN_VALUE
{
    void* none;
    /// <summary>
    /// 解放が必要。
    /// </summary>
    TEXT word;
    ssize_t integer;
    double decimal;
} TOKEN_VALUE;

typedef struct tag_TOKEN
{
    SOURCE_POSITION position;
    TOKEN_KIND kind;
    TOKEN_VALUE_TYPE type;
    TOKEN_VALUE value;
} TOKEN;

/// <summary>
/// <see cref="<#= TokenUtility.TokenKind #>" />から<c>enum</c>メンバ名を取得。
/// </summary>
/// <param name="kind"></param>
/// <returns></returns>
const TEXT* get_member_name_by_token_kind(<#= TokenUtility.TokenKind #> kind);

void add_token_kind(OBJECT_LIST* tokens, <#= TokenUtility.TokenKind #> kind, const SOURCE_POSITION* source_position);
void add_token_word(OBJECT_LIST* tokens, <#= TokenUtility.TokenKind #> kind, const TEXT* word, const SOURCE_POSITION* source_position);
void add_token_integer(OBJECT_LIST* tokens, <#= TokenUtility.TokenKind #> kind, ssize_t value, const SOURCE_POSITION* source_position);
void add_token_decimal(OBJECT_LIST* tokens, <#= TokenUtility.TokenKind #> kind, double value, const SOURCE_POSITION* source_position);

<#@ include file="lexical_token.t4" once="true" #>
